{"version":3,"sources":["Components/Information/CancerStats/CancerStat.js","Components/Loading/Loading.js","Components/Information/CancerStats/CancerDisplay.js","Components/Information/Employee.js","Components/Information/Titanic/Passenger.js","Components/Information/Titanic/TitanicDisplay.js","redux/userReducer.js","Components/Information/Info.js","Components/Auth/Auth.js","routes.js","Components/logo.png","Components/Header/Header.js","App.js","reportWebVitals.js","redux/breakingBadReducer.js","redux/store.js","index.js"],"names":["CancerStat","props","data_id","eclass","id","clump_thickness","uniformity_of_cell_size","uniformity_of_cell_shape","marginal_adhesion","single_epithlial_cell_size","bare_nuclei","bland_chromatin","normal_nuceoli","mitoses","className","Loading","Component","CancerDisplay","useState","state","setState","returnZeros","single_epithelial_cell_size","cancerStats","setCancerStats","cancerSearch","setCancerSearch","formOpen","setFormOpen","isLoading","setIsLoading","useEffect","grabStats","handleInputChange","prop","event","persist","target","value","a","axios","get","then","res","data","addToCancerPending","post","mappedCancerStatsS","filter","element","toString","includes","map","class","onClick","onChange","e","type","placeholder","handleForm","Employee","index","name","age","start_month","start_year","end_month","end_year","employment_duration","distance","married","pay","attendance","Passenger","survived","pclass","sex","siblings_spouses_aboard","parents_children_aboard","fare","style","marginLeft","TitanicDisplay","titanicPassengers","setTitanicPassengers","passengerSearch","setPassengerSearch","mappedPassengers","paddingRight","initialState","user","isLoggedIn","isError","LOGIN_USER","LOGOUT_USER","logoutUser","payload","Info","handleEmployeeSearch","employeeSearch","refreshEmployees","resetEmployeeStats","nvpEmployees","indexing","isMobile","employeeDataInput","showPassengers","passengers","currentView","currentMenu","bind","addEmployeeData","val","this","showMachineLearning","data3View","dataItems","dataItems1","dataView","data1View","data2View","cancerDataInput","evenTable","cols","openMenu","selectView","connect","reduxState","Auth","email","password","setPermission","isAuthenticated","handleChange","resetState","thisLogout","auth","history","push","errorMsg","closeErrorMessage","loginUser","catch","err","console","log","exact","path","component","Header","src","image","alt","App","routes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","characters","rootReducer","combineReducers","action","UPDATE_CHARACTERS","createStore","composeWithDevTools","applyMiddleware","reduxPromiseMiddleware","Router","BrowserRouter","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.ea2b68ee.chunk.js","sourcesContent":["import '../Info.css'\r\n// import './Column.css'\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst CancerStat = (props) => {\r\n\r\n    const {data_id,eclass,id,clump_thickness,uniformity_of_cell_size,uniformity_of_cell_shape,marginal_adhesion,single_epithlial_cell_size,bare_nuclei,bland_chromatin,normal_nuceoli,mitoses } = props\r\n    \r\n    // --- this changes background color according to even odd values -- //\r\n    // let data_num = data_id % 2 === 0\r\n    // console.log('data',data_num)\r\n    return(\r\n        \r\n        \r\n        <div className=\"scrollitems\">\r\n        {/* <div className={`scrollitems ${data_num ? true : 'scrollitems-dark'}`}> */}\r\n        {/* <div> */}\r\n            {/* {data_num === true ? (<a>true</a>) : (<a>false  </a>)} */}\r\n            <a>{id}</a>\r\n            <a >{clump_thickness}</a>\r\n            <a>{uniformity_of_cell_size}</a>\r\n            <a>{uniformity_of_cell_shape}</a>\r\n            <a>{marginal_adhesion}</a>\r\n            <a>{single_epithlial_cell_size}</a>\r\n            <a>{bare_nuclei}</a>\r\n            <a>{bland_chromatin}</a>\r\n            <a>{normal_nuceoli}</a>\r\n            <a>{mitoses}</a>\r\n            <a>{eclass}</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CancerStat","import React, { Component } from 'react';\r\nimport './Loading.css'\r\n\r\nclass Loading extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"load-wrapp\">\r\n        <div className=\"load-3\">\r\n          <div className=\"line\"></div>\r\n          <div className=\"line\"></div>\r\n          <div className=\"line\"></div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Loading;","import CancerStat from \"./CancerStat\"\r\nimport Loading from \"../../Loading/Loading\"\r\nimport { useState,useEffect } from \"react\"\r\nimport axios from \"axios\"\r\n// import { handle } from \"express/lib/application\"\r\n\r\nconst CancerDisplay = (props) => {\r\n\r\n    const [state,setState] = useState({})\r\n\r\n    const returnZeros = () => { // sets / resets form values\r\n        setState({\r\n            id:0,\r\n            clump_thickness:0,\r\n            uniformity_of_cell_size:0,\r\n            uniformity_of_cell_shape:0,\r\n            marginal_adhesion:0,\r\n            single_epithelial_cell_size:0,\r\n            bare_nuclei:0,\r\n            bland_chromatin:0,\r\n            normal_nuceoli:0,\r\n            mitoses:0,\r\n        })\r\n    }\r\n\r\n    const [cancerStats,setCancerStats] = useState([])\r\n    const [cancerSearch,setCancerSearch] = useState('')\r\n    const [formOpen,setFormOpen] = useState(false)\r\n    const [isLoading,setIsLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        grabStats()\r\n        returnZeros()\r\n    },[])\r\n\r\n    const handleInputChange = (prop,event) => {\r\n        event.persist();\r\n        setState((state) => ({\r\n            ...state,\r\n            [prop]: event.target.value,\r\n        }));\r\n    };\r\n\r\n    const grabStats = async () => {\r\n        await setIsLoading(true)\r\n        await axios.get('api/cancer/all').then(res => {\r\n            setCancerStats(res.data)\r\n        })\r\n        await setIsLoading(false)\r\n    }\r\n\r\n    const addToCancerPending = async () => {\r\n        await setIsLoading(true)\r\n        await axios.post('/api/cancer/add',state)\r\n        await grabStats()\r\n        await returnZeros()\r\n        await setIsLoading(false)\r\n    }\r\n\r\n    // const mappedCancerStatsS = cancerStats.map(element => {            \r\n    //     return <CancerStat key={element.id} data_id={element.id} eclass={element.class} id={element.id} clump_thickness={element.clump_thickness} uniformity_of_cell_size={element.uniformity_of_cell_size} uniformity_of_cell_shape={element.uniformity_of_cell_shape}  marginal_adhesion={element.marginal_adhesion} single_epithelial_cell_size={element.single_epithelial_cell_size} bare_nuclei={element.bare_nuclei} bland_chromatin={element.bland_chromatin} normal_nuceoli={element.normal_nuceoli} mitoses={element.mitoses} />\r\n    // })\r\n\r\n    // ---- THESE BLOCKS FOR SEARCHING ----- ///\r\n    const filterCancer = cancerStats.filter(element => element.id.toString().includes(cancerSearch))\r\n    // console.log('here is cancer stats',filterCancer)\r\n    const mappedCancerStatsS = filterCancer.map(element => {            \r\n        return <CancerStat key={element.id} data_id={element.id} eclass={element.class} id={element.id} clump_thickness={element.clump_thickness} uniformity_of_cell_size={element.uniformity_of_cell_size} uniformity_of_cell_shape={element.uniformity_of_cell_shape}  marginal_adhesion={element.marginal_adhesion} single_epithelial_cell_size={element.single_epithelial_cell_size} bare_nuclei={element.bare_nuclei} bland_chromatin={element.bland_chromatin} normal_nuceoli={element.normal_nuceoli} mitoses={element.mitoses} />\r\n    })\r\n    // ------------------------------------- //\r\n\r\n    return(\r\n        <div>\r\n            <section className=\"search-bar\" >\r\n                <a onClick={() => setFormOpen(!formOpen)}>add info?</a>\r\n                <a onClick={() => grabStats()}>refresh</a>\r\n                <input onChange={e => setCancerSearch(e.target.value)} type=\"text\" placeholder=\"Search\" className=\"search-input\" />\r\n                <a onClick={() => props.handleForm('currentView','')}>close</a>\r\n            </section>\r\n            <form className={`stats-input ${formOpen ? false : 'stats-input-hide'}`}>\r\n                <input placeholder=\"id\" onChange={e => handleInputChange('id',e)}/>\r\n                <input placeholder=\"Clump Thickness\" onChange={e => handleInputChange('clump_thickness',e)}/>\r\n                <input placeholder=\"Uniformity of cell size\" onChange={e => handleInputChange('uniformity_of_cell_size',e)}/>\r\n                <input placeholder=\"Uniformity of cell shape\" onChange={e => handleInputChange('uniformity_of_cell_shape',e)}/>\r\n                <input placeholder=\"Marginal adhesion\" onChange={e => handleInputChange('marginal_adhesion',e)}/>\r\n                <input placeholder=\"Sinlge opithelial cell size\" onChange={e => handleInputChange('single_epithelial_cell_size',e)}/>\r\n                <input placeholder=\"Bare nuclei\" onChange={e => handleInputChange('bare_nuclei',e)}/>\r\n                <input placeholder=\"Bland nuceoli\" onChange={e => handleInputChange('bland_chromatin',e)}/>\r\n                <input placeholder=\"Normal nuceoli\" onChange={e => handleInputChange('normal_nuceoli',e)}/>\r\n                <input placeholder=\"Mitoses\" onChange={e => handleInputChange('mitoses',e)}/>\r\n                <button onClick={() => addToCancerPending()}>submit</button>\r\n            </form>\r\n            <section className=\"stats-container\">\r\n                {isLoading ? <Loading/> : null}\r\n                <header className=\"data-spec\"><strong>id</strong><strong>clump Thickness</strong><strong>unif. cell size</strong><strong>unif. cell shape</strong><strong>marg. adhesion</strong><strong>single epi. cell size</strong><strong>bare nuclei</strong><strong>bland chrom.</strong><strong>norm. nuceoli</strong><strong>mitoses</strong><strong>results</strong></header>\r\n\r\n                <span className=\"data-spec-list\">{mappedCancerStatsS}</span>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CancerDisplay","import './Info.css'\r\n\r\nconst Employee = (props) => {\r\n\r\n    const { id,index,name,age,start_month,start_year,end_month,end_year,employment_duration,distance,married,pay,attendance } = props\r\n\r\n    let data_num = id % 2 === 0\r\n\r\n    return(\r\n        <div className=\"scrollitems\">\r\n        {/* <div className={`scrollitems emp-a ${data_num ? true : 'scrollitems-dark emp-a'}`}> */}\r\n        {/* {data_num === true ? (<a>true</a>) : (<a>false  </a>)} */}\r\n        <a>{name}</a>\r\n        <a>{age}</a>\r\n        <a>{start_month}</a>\r\n        <a>{start_year}</a>\r\n        <a>{end_month}</a>\r\n        <a>{end_year}</a>\r\n        <a>{employment_duration}</a>\r\n        <a>{distance}</a>\r\n        <a>{married}</a>\r\n        <a>{pay}</a>\r\n        <a>{attendance}</a>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Employee","// import './Titanic.css'\r\nimport React, { useState,useEffect, Children } from 'react'\r\n\r\nconst Passenger = (props) => {\r\n\r\n    const { survived,pclass,name,sex,siblings_spouses_aboard,parents_children_aboard,fare } = props\r\n\r\n    return(\r\n        <div className=\"scrollitems\">\r\n            <a >{name}</a>\r\n            <a>{pclass}</a>\r\n            <a>{sex}</a>\r\n            <a>{siblings_spouses_aboard}</a>\r\n            <a style={{marginLeft:'100px'}}>{parents_children_aboard}</a>\r\n            <a>{fare}</a>\r\n            <a>{survived > 0 ? 'survived' : 'perished'}</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Passenger","import Loading from \"../../Loading/Loading\"\r\nimport { useState,useEffect } from \"react\"\r\nimport axios from \"axios\"\r\nimport Passenger from \"./Passenger\"\r\n\r\n\r\nconst TitanicDisplay = (props) => {\r\n\r\n    const [state,setState] = useState({})\r\n\r\n    const returnZeros = () => { // sets / resets form values\r\n        setState({\r\n            age:0,\r\n            survived:0,\r\n            fare:0,\r\n            sex:0,\r\n            siblings_spouses_aboard:0,\r\n            parents_children_aboard:0,\r\n            pclass:0,\r\n            index:0\r\n        })\r\n    }\r\n\r\n    const [titanicPassengers, setTitanicPassengers] = useState([])\r\n    const [passengerSearch,setPassengerSearch] = useState('')\r\n    const [formOpen,setFormOpen] = useState(false)\r\n    const [isLoading,setIsLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        grabStats()\r\n        returnZeros()\r\n    },[])\r\n\r\n    const handleInputChange = (prop,event) => {\r\n        event.persist();\r\n        setState((state) => ({\r\n            ...state,\r\n            [prop]: event.target.value,\r\n        }));\r\n    };\r\n\r\n    const grabStats = async () => {\r\n        await setIsLoading(true)\r\n        await axios.get('api/passengers/all').then(res => {\r\n            setTitanicPassengers(res.data)\r\n        })\r\n        await setIsLoading(false)\r\n    }\r\n\r\n    const addToCancerPending = async () => {\r\n        await setIsLoading(true)\r\n        await axios.post('/api/pessenger/add',state)\r\n        await grabStats()\r\n        await returnZeros()\r\n        await setIsLoading(false)\r\n    }\r\n\r\n    const filterPassenger = titanicPassengers.filter(element => element.name.toString().includes(passengerSearch))\r\n    const mappedPassengers = filterPassenger.map(element => {            \r\n        return <Passenger key={element.index} index={element.index} pclass={element.pclass} siblings_spouses_aboard={element.siblings_spouses_aboard} parents_children_aboard={element.parents_children_aboard} age={element.age} survived={element.survived} sex={element.sex} fare={element.fare} name={element.name} />\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            <section className=\"search-bar\" >\r\n                <a onClick={() => setFormOpen(!formOpen)}>add info?</a>\r\n                <a onClick={() => grabStats()}>refresh</a>\r\n                <input onChange={e => setPassengerSearch(e.target.value)} type=\"text\" placeholder=\"Search\" className=\"search-input\" />\r\n                <p className=\"p-search-line\" onClick={() => props.handleForm('currentView','')}>close</p>\r\n            </section>\r\n            <form className={`stats-input ${formOpen ? false : 'stats-input-hide'}`}>\r\n                <input placeholder=\"name\" onChange={e => handleInputChange('name',e)}/>\r\n                <input placeholder=\"class\" onChange={e => handleInputChange('class',e)}/>\r\n                <input placeholder=\"gender\" onChange={e => handleInputChange('gender',e)}/>\r\n                <input placeholder=\"age\" onChange={e => handleInputChange('age',e)}/>\r\n                <input placeholder=\"siblings / spouses on board\" onChange={e => handleInputChange('siblings_spouses_aboard',e)}/>\r\n                <input placeholder=\"parents / children on board\" onChange={e => handleInputChange('parents_children_aboard',e)}/>\r\n                <input placeholder=\"result\" onChange={e => handleInputChange('results',e)}/>\r\n                <button onClick={() => addToCancerPending()}>submit</button>\r\n            </form>\r\n            <section className=\"stats-container\">\r\n                {isLoading ? <Loading/> : null}\r\n                <header className=\"data-spec\"><strong style={{marginLeft:'30px',paddingRight:'40px'}}>name</strong><strong style={{marginLeft:'50px'}}>class</strong><strong>gender</strong><strong>siblings_spouses_aboard</strong><strong>parents_children_aboard</strong><strong>results</strong></header>\r\n\r\n                <span className=\"data-spec-list\">{mappedPassengers}</span>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TitanicDisplay","import axios from 'axios'\r\n\r\nconst initialState = {\r\n    user: {},\r\n    isLoggedIn:false,\r\n    isLoading:false,\r\n    isError:false\r\n}\r\n\r\nconst LOGIN_USER = 'LOGIN_USER'\r\nconst LOGOUT_USER = 'LOGOUT_USER'\r\n\r\nexport function loginUser(email, password) {\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: axios.post('/api/auth/login', {email,password}).catch(err => console.log('error',err))\r\n    }\r\n}\r\n\r\nexport function logoutUser() {\r\n    return {\r\n        type: LOGOUT_USER,\r\n        payload: axios.get('/api/auth/logout')\r\n    }\r\n}\r\n\r\n// export function registerUser(first_name,last_name,email,password) {\r\n\r\n// }\r\n\r\nexport default function userReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case LOGIN_USER + '_PENDING':\r\n\r\n            return {\r\n                ...state,\r\n                isLoading:true\r\n            }\r\n            case LOGIN_USER + '_FULFILLED':\r\n\r\n            return {\r\n                ...state,\r\n                user: action.payload.data, isLoggedIn:true, isLoading:false\r\n            }\r\n        case LOGIN_USER + '_REJECTED':\r\n            \r\n            return {\r\n                ...state,\r\n                isLoading:false,\r\n                isError:true\r\n            }\r\n\r\n        case LOGOUT_USER + 'PENDING':\r\n            return {\r\n                ...state, isLoading: true,\r\n            }\r\n\r\n        case LOGOUT_USER + '_FULFILLED':\r\n            return {\r\n                ...state, isLoggedIn: false,\r\n                user: {},\r\n            }\r\n\r\n        default:\r\n            return state \r\n    }\r\n}","import React, { Component } from 'react'\r\n// import axios from 'axios';\r\nimport axios from 'axios'\r\nimport './Info.css'\r\nimport data from './data'\r\n// import InfoItem from './InfoItem'\r\n// import BookData from './BookData'\r\n// import CancerStat from './CancerStat'\r\nimport CancerDisplay from './CancerStats/CancerDisplay'\r\n// import AddCancerStat from './AddCancerStat'\r\nimport Employee from './Employee'\r\nimport Loading from '../Loading/Loading'\r\n// import Titanic from './Titanic/Titanic'\r\nimport TitanicDisplay from './Titanic/TitanicDisplay'\r\n// import Passenger from './Titanic/Passenger'\r\nimport { connect } from 'react-redux'\r\nimport { loginUser, logoutUser } from './../../redux/userReducer'\r\n// import Py from '../pytest/Py'\r\nimport { withRouter } from 'react-router';\r\n\r\n\r\nclass Info extends Component {\r\n    constructor(props){\r\n        super();\r\n\r\n        this.state = {\r\n            isLoading:false,\r\n\r\n            employeeSearch:\"\",\r\n            nvpEmployees:[],\r\n            indexing:0,\r\n            isMobile:false,\r\n\r\n            // employee data //\r\n            employeeDataInput:false,\r\n\r\n            // passenger data\r\n            showPassengers:false,\r\n            passengers:[],\r\n\r\n            // - selecting view - //\r\n            currentView:'',\r\n\r\n            // - selecting menu - //\r\n            currentMenu:'',\r\n            \r\n        }\r\n        this.handleForm = this.handleForm.bind(this)\r\n        this.addEmployeeData = this.addEmployeeData.bind(this)\r\n        this.refreshEmployees = this.refreshEmployees.bind(this)\r\n    }\r\n\r\n    // ---- State Management ---- //\r\n    handleForm(prop,val) {\r\n        this.setState({\r\n            [prop]:val\r\n        })\r\n    }\r\n\r\n    // --- selecting views --- //\r\n    selectView(prop,val) {\r\n        this.handleForm(prop,val)\r\n        this.setState({currentMenu:''})\r\n    }\r\n\r\n    // --- selecting menus --- //\r\n    openMenu(prop,val) {\r\n        if(val === this.state[prop]) { // closes menu if already open\r\n            return this.setState({currentMenu:''})\r\n        } else {\r\n            return this.handleForm(prop,val)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    // ---- Employee data functions ---- //\r\n    handleEmployeeSearch = (filter) => {\r\n        this.setState({employeeSearch:filter})\r\n    }\r\n    addEmployeeData() {\r\n        this.setState({employeeDataInput:!this.state.employeeDataInput})\r\n    }\r\n    refreshEmployees = async () => {\r\n        this.resetEmployeeStats().then(\r\n            axios.get('api/employees/all').then(res => {\r\n                this.setState({nvpEmployees:res.data})\r\n            })\r\n        )}\r\n    resetEmployeeStats = async () => {\r\n        this.setState({\r\n            nvpEmployees:[],\r\n            employeeSearch:\"\"\r\n        })\r\n    }\r\n    // ---------------------------------- //\r\n\r\n    render(){\r\n        \r\n        const { currentView,employeeDataInput,isLoading,currentMenu,showMachineLearning,data3View: employeeView,cancerSearch,dataItems,dataItems1,dataView,data1View,data2View: cancerView,cancerDataInput,cancerStats,isMobile,evenTable,nvpEmployees,employeeSearch,cols,showPassengers: passengersView,passengers } = this.state\r\n\r\n        const filterEmployee = nvpEmployees.filter(element => element.name.toString().includes(employeeSearch))\r\n        const mappedEmployees = filterEmployee.map(element => {\r\n            return <Employee key={element.index} id={element.index} name={element.name} age={element.age} start_month={element.start_month} start_year={element.start_year} end_month={element.end_month} end_year={element.end_year} employment_duration={element.employment_duration} distance={element.distance} married={element.married} pay={element.pay} attendance={element.attendance} />\r\n        })\r\n\r\n        // const mappedPassengers = passengers.map(element => {\r\n        //     return <Passenger data={element} key={element.index} age={element.age} name={element.name} pclass={element.pclass} sex={element.sex} siblings_spouses_aboard={element.siblings_spouses_aboard} parents_children_aboard={element.parents_children_aboard} survived={element.survived} />\r\n        // })\r\n        \r\n        return(\r\n            <div className=\"info-container\">\r\n                <section className=\"right-column\">\r\n\r\n                <div className=\"data-header\">\r\n                    <div><h3 className=\"info-h4\" onClick={() => this.openMenu('currentMenu','db')} >Database</h3>\r\n                        <div className={`database-dropdown ${currentMenu === 'db' ? true : 'database-dropdown-hide'}`}>\r\n\r\n                            <h4 className={` ${currentView === 'cancerView' ? 'info-h3-selected' : 'info-h3'}`} onClick={() => this.selectView('currentView','cancerView')}>cancer stats</h4>\r\n                            <h4 className={`${currentView === 'passengersView' ? 'info-h3-selected' : 'info-h3' }`} onClick={() => this.selectView('currentView','passengersView')}>passengers</h4>\r\n                            <h4 className={`${currentView === 'employeeView' ? 'infor-h3-selected' : 'infor-h3'}`} onClick={() => this.selectView('currentView','employeeView')}>employees</h4>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div><h3 className=\"info-h3\"  onClick={() => this.openMenu('currentMenu','ml')} >machine learning</h3>\r\n                        {/* <div className={`database-dropdown ${!showMachineLearning ? true : 'database-dropdown-hide'}`}>\r\n                            { (<h4 className=\"info-h3\">regression</h4>) : (<h4 className=\"info-h4-selected\" >regression</h4>)}\r\n                            {(<h4 className=\"info-h3\" >classification</h4>) : (<h4 className=\"info-h4-selected\" >classification</h4>)}\r\n                            {(<h4 className=\"info-h3\" >clustering</h4>) : (<h4 className=\"info-h4-selected\" >clustering</h4>)}\r\n                            {(<h4 className=\"info-h3\" >association rule learning</h4>) : (<h4 className=\"info-h4-selected\" >association rule learning</h4>)}\r\n                            {(<h4 className=\"info-h3\" >reinforcement learning</h4>) : (<h4 className=\"info-h4-selected\" >reinforcement learning</h4>)}\r\n                            {(<h4 className=\"info-h3\" >neural networks</h4>) : (<h4 className=\"info-h4-selected\" >deep learning</h4>)}\r\n                            {(<h4 className=\"info-h3\" >natural language processing</h4>) : (<h4 className=\"info-h4-selected\" >natural language processing</h4>)}\r\n                            {(<h4 className=\"info-h3\" >dimensionality reduction</h4>) : (<h4 className=\"info-h4-selected\" >dimensionality reduction</h4>)}\r\n                        </div> */}\r\n\r\n                        <div className={`database-dropdown ${currentMenu === 'ml' ? true : 'database-dropdown-hide'}`}>\r\n                        <h4>neural networks</h4>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div><h3 onClick={() => this.openMenu('currentMenu','docs')} >documents</h3></div>\r\n\r\n                </div>\r\n\r\n                    <a style={{marginLeft:'75%'}} onClick={() => this.props.logoutUser()}>logout</a>\r\n\r\n                    {currentView === 'cancerView' ? <CancerDisplay handleForm={this.handleForm} /> : null}\r\n\r\n                    {currentView === 'passengersView' ? <TitanicDisplay handleForm={this.handleForm} /> : null}\r\n                    {/* <TitanicDisplay /> */}\r\n\r\n                    {/* MOVING THIS CODE TO EXTERNAL */}\r\n                    {/* {employeeView ? \r\n                    <div>\r\n                        <div className=\"search-bar\" ><p className=\"p-search-line\"  onClick={this.addEmployeeData}>add info?</p><p className=\"p-search-line\" onClick={this.refreshEmployees}>refresh</p><input onChange={e => this.handleEmployeeSearch(e.target.value)} type=\"text\" placeholder=\"Search\" className=\"search-input\" /></div>\r\n                        <div className={`cancer-stats-input ${employeeDataInput ? false : 'cancer-stats-input-hide'}`}>\r\n                                <div className=\"input-element\"><input placeholder=\"name\" onChange={e => this.handleForm('id',e.target.value)}/></div>\r\n                                <div className=\"input-element\"><input placeholder=\"Age\" onChange={e => this.handleForm('clump_thickness',e.target.value)}/></div>\r\n                                <div className=\"input-element\"><input placeholder=\"Start Month\" onChange={e => this.handleForm('uniformity_of_cell_size',e.target.value)}/></div>\r\n                                <div className=\"input-element\"><input placeholder=\"Start Year\" onChange={e => this.handleForm('uniformity_of_cell_shape',e.target.value)}/></div>\r\n                                <div className=\"input-element\"><input placeholder=\"End Month\" onChange={e => this.handleForm('marginal_adhesion',e.target.value)}/></div>\r\n                                <div className=\"input-element\"><input placeholder=\"Employment Duration\" onChange={e => this.handleForm('single_epithelial_cell_size',e.target.value)}/></div>\r\n                                <div className=\"input-element\"><input placeholder=\"Distance\" onChange={e => this.handleForm('bare_nuclei',e.target.value)}/></div>\r\n                                <div className=\"input-element\"><input placeholder=\"Pay Rate\" onChange={e => this.handleForm('bland_chromatin',e.target.value)}/></div>\r\n                                <div className=\"input-element\"><input placeholder=\"Attendance\" onChange={e => this.handleForm('normal_nuceoli',e.target.value)}/></div>\r\n                                <button>submit</button>\r\n                        </div>\r\n                        <div className=\"data-spec\"><a>Name</a><a>Age</a><a>Start Month</a><a>Start Year</a><a>End Month</a><a>End Year</a><a>Employment Duration</a><a>Distance</a><a>Married</a><a>Pay Rate</a><a>Attendance</a></div>\r\n                        <div className=\"stats-container\">\r\n                            {isLoading ? <Loading/> : null}\r\n                                <span className=\"data-spec-list\">{mappedEmployees}</span>\r\n                        </div>\r\n\r\n                    </div> : null} */}\r\n\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(reduxState) {\r\n    return reduxState\r\n}\r\n\r\nexport default connect(mapStateToProps, {logoutUser})(Info)","import React, { Component } from 'react'\r\nimport './Auth.css'\r\nimport { loginUser,logoutUser } from '../../redux/userReducer'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Auth extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            user:{},\r\n            email:'email',\r\n            password:'password',\r\n            setPermission:true,\r\n            isAuthenticated:false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.resetState = this.resetState.bind(this)\r\n        this.thisLogout = this.thisLogout.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { user } = this.props\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        const { auth,id } = this.props.user.user\r\n        const { isAuthenticated } = this.state\r\n        if(auth === true && isAuthenticated === false) {\r\n            this.setState({isAuthenticated:true})\r\n            this.props.history.push(`/info/${id}`)\r\n        }\r\n    }\r\n\r\n    resetState(){\r\n        this.setState({\r\n            email:'email',\r\n            password:'password'\r\n        })\r\n    }\r\n\r\n    handleChange(prop,val){\r\n        this.setState({\r\n            [prop]: val\r\n        })\r\n    }\r\n    \r\n    // handleLogin = async () => {\r\n    //     const { email,password } = this.state\r\n\r\n    thisLogout() {\r\n        this.setState({\r\n            isAuthenticated:false,\r\n            user:{}\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { auth } = this.props.user.user\r\n        const { email,password } = this.state\r\n\r\n        return(\r\n            <div>\r\n               <div className=\"auth-container\">\r\n                    <h1 className='auth-title'>Data Structures</h1>\r\n                    {this.state.errorMsg && <h3 className='auth-error-msg'>{this.state.errorMsg} <span onClick={this.closeErrorMessage}>X</span></h3>}\r\n                    <div className='auth-input-box'>\r\n                        <p >Email:</p>\r\n                        <input placeholder={email} onChange={e => this.handleChange('email', e.target.value)} />\r\n                    </div>\r\n                    <div className='auth-input-box'>\r\n                        <p >Password:</p>\r\n                        <input value={this.state.password} type='password' onChange={e => this.handleChange('password', e.target.value)} />\r\n                    </div>\r\n                    <div className='auth-button-container'>\r\n                        <button className='dark-button' onClick={() => this.props.loginUser(email,password)}> Login </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(reduxState){\r\n    return reduxState\r\n}\r\n\r\nexport default connect(mapStateToProps, {loginUser,logoutUser})(Auth)","\r\n   \r\nimport React from 'react' \r\nimport { Switch, Route } from 'react-router-dom'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport Info from './Components/Information/Info'\r\nimport Auth from './Components/Auth/Auth'\r\n\r\nexport default (\r\n    <Switch>\r\n        <Route exact path=\"/\" component={Auth} />\r\n        <Route path=\"/info/:id\" component={Info} />\r\n    </Switch>\r\n)","export default __webpack_public_path__ + \"static/media/logo.8a76484b.png\";","import './Header.css'\r\nimport image from '../logo.png'\r\n\r\nconst Header = (props) => {\r\n    return(\r\n        <div className=\"header\">\r\n            {/* <h3>header</h3> */}\r\n            {/* <img src=\"https://firebasestorage.googleapis.com/v0/b/depot-7bb3e.appspot.com/o/logo.jpeg?alt=media&token=9d6b52c0-738e-4c1f-bf26-8323cacac73d\" className=\"logo\" alt=\"NVP\"/> */}\r\n            <img src={image} className=\"logo\" alt=\"CD\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import './App.css';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport routes from './routes'\r\nimport Auth from './Components/Auth/Auth'\r\nimport Header from './Components/Header/Header';\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n    <div className=\"App\">\r\n      <Header/>\r\n      {routes}\r\n    </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import axios from \"axios\";\r\n\r\nconst initialState = {\r\n  // characters: []\r\n  characters: {}\r\n};\r\n\r\nconst UPDATE_CHARACTERS = \"UPDATE_CHARACTERS\";\r\n\r\nexport function updateCharacters() {\r\n  return {\r\n    type: UPDATE_CHARACTERS,\r\n    payload: axios.get(\"https://www.breakingbadapi.com/api/characters\")\r\n    // payload: axios.get('/api/projects/all')\r\n  };\r\n}\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case UPDATE_CHARACTERS + \"_FULFILLED\":\r\n      return {\r\n        ...state,\r\n        characters: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","// import { createStore } from 'redux'\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux' \r\nimport reduxPromiseMiddleware from 'redux-promise-middleware'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport userReducer from './userReducer'\r\nimport breakingBadReducer from './breakingBadReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    user: userReducer,\r\n    characters: breakingBadReducer\r\n})\r\n\r\nexport default createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(reduxPromiseMiddleware))\r\n  )\r\n\r\n// export default createStore(userReducer)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\nimport { BrowserRouter, HashRouter  } from 'react-router-dom'\r\nconst Router = process.env.NODE_ENV === 'development' ? HashRouter : BrowserRouter;\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n    <Provider store={store}>\r\n    <App />\r\n    </Provider>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}