{"version":3,"sources":["Components/Information/CancerStats/CancerStat.js","Components/Loading/Loading.js","Components/Information/CancerStats/CancerDisplay.js","Components/Information/Employee.js","Components/Information/Titanic/PassengerRow.js","Components/Information/Titanic/TitanicDisplay.js","Components/Information/Documents/OneDoc.js","Components/Information/Documents/Documents.js","redux/userReducer.js","Components/Information/ProductionLine/Line.js","Components/Information/Prototype/ProtoDisplay.js","Components/Information/Info.js","Components/Auth/Auth.js","routes.js","Components/logo.png","Components/Header/Header.js","App.js","reportWebVitals.js","redux/breakingBadReducer.js","redux/store.js","index.js"],"names":["CancerStat","props","data_id","eclass","id","clump_thickness","uniformity_of_cell_size","uniformity_of_cell_shape","marginal_adhesion","single_epithlial_cell_size","bare_nuclei","bland_chromatin","normal_nuceoli","mitoses","className","Loading","Component","CancerDisplay","useState","state","setState","returnZeros","single_epithelial_cell_size","cancerStats","setCancerStats","cancerSearch","setCancerSearch","formOpen","setFormOpen","isLoading","setIsLoading","useEffect","grabStats","handleInputChange","prop","event","persist","target","value","a","axios","get","then","res","data","addToCancerPending","post","mappedCancerStatsS","filter","element","toString","includes","map","class","onClick","onChange","e","type","placeholder","handleForm","Employee","index","name","age","start_month","start_year","end_month","end_year","employment_duration","distance","married","pay","attendance","PassengerRow","survived","pclass","sex","siblings_spouses_aboard","parents_children_aboard","fare","firstName","split","lastName","fullname","setFullName","TitanicDisplay","specItemWidth","titanicPassengers","setTitanicPassengers","passengerSearch","setPassengerSearch","mappedPassengers","style","top","left","width","OneDoc","body","title","memo_id","category","input","opacity","grabDocs","deleteDoc","DB","handleDB","rows","Documents","docs","setDocs","create","setCreate","selected","setSelected","currentDoc","localStorage","undefined","setItem","selectMemo","sendUpdate","put","clearCurrent","catch","err","console","log","delete","mappedItem","docEl","parseInt","el","mappedDocList","padding","backgroundColor","margin","initialState","user","isLoggedIn","isError","LOGIN_USER","LOGOUT_USER","BROWSER_LOGIN","browserLogin","email","browser_id","payload","Line","speedInFPM","profileLength","columns","extrudes","time","setTime","error","setError","getTime","mins","hours","remainingMins","Math","floor","maxWidth","position","height","marginLeft","bottom","execute","selectView","ProtoDislplay","Info","handleEmployeeSearch","employeeSearch","refreshEmployees","resetEmployeeStats","nvpEmployees","employeeDataInput","currentView","currentMenu","bind","addEmployeeData","val","auth","this","savedEmail","theWindow","s4","random","substring","uniqueId","history","push","logoutUser","showMachineLearning","data3View","dataItems","dataItems1","dataView","data1View","data2View","cancerDataInput","isMobile","evenTable","cols","showPassengers","passengers","openMenu","handleLogout","connect","reduxState","Auth","password","color","handleChange","loginUser","exact","path","component","Header","src","image","alt","App","routes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","characters","rootReducer","combineReducers","action","UPDATE_CHARACTERS","createStore","composeWithDevTools","applyMiddleware","reduxPromiseMiddleware","Router","BrowserRouter","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.305785ae.chunk.js","sourcesContent":["import '../Info.css'\r\n\r\nconst CancerStat = (props) => {\r\n\r\n    const {data_id,eclass,id,clump_thickness,uniformity_of_cell_size,uniformity_of_cell_shape,marginal_adhesion,single_epithlial_cell_size,bare_nuclei,bland_chromatin,normal_nuceoli,mitoses } = props\r\n    return(\r\n        <div className=\"scrollitems\">\r\n            <p>{id}</p>\r\n            <p>{clump_thickness}</p>\r\n            <p>{uniformity_of_cell_size}</p>\r\n            <p>{uniformity_of_cell_shape}</p>\r\n            <p>{marginal_adhesion}</p>\r\n            <p>{single_epithlial_cell_size}</p>\r\n            <p>{bare_nuclei}</p>\r\n            <p>{bland_chromatin}</p>\r\n            <p>{normal_nuceoli}</p>\r\n            <p>{mitoses}</p>\r\n            <p>{eclass}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CancerStat","import React, { Component } from 'react';\r\nimport './Loading.css'\r\n\r\nclass Loading extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"load-wrapp\">\r\n        <div className=\"load-3\">\r\n          <div className=\"line\"></div>\r\n          <div className=\"line\"></div>\r\n          <div className=\"line\"></div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Loading;","import CancerStat from \"./CancerStat\"\r\nimport Loading from \"../../Loading/Loading\"\r\nimport { useState,useEffect } from \"react\"\r\nimport axios from \"axios\"\r\n\r\nconst CancerDisplay = (props) => {\r\n\r\n    const [state,setState] = useState({})\r\n\r\n    const returnZeros = () => { // sets / resets form values\r\n        setState({\r\n            id:0,\r\n            clump_thickness:0,\r\n            uniformity_of_cell_size:0,\r\n            uniformity_of_cell_shape:0,\r\n            marginal_adhesion:0,\r\n            single_epithelial_cell_size:0,\r\n            bare_nuclei:0,\r\n            bland_chromatin:0,\r\n            normal_nuceoli:0,\r\n            mitoses:0,\r\n        })\r\n    }\r\n\r\n    const [cancerStats,setCancerStats] = useState([])\r\n    const [cancerSearch,setCancerSearch] = useState('')\r\n    const [formOpen,setFormOpen] = useState(false)\r\n    const [isLoading,setIsLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        grabStats()\r\n        returnZeros()\r\n    },[])\r\n\r\n    const handleInputChange = (prop,event) => {\r\n        event.persist();\r\n        setState((state) => ({\r\n            ...state,\r\n            [prop]: event.target.value,\r\n        }));\r\n    };\r\n\r\n    const grabStats = async () => {\r\n        await setIsLoading(true)\r\n        await axios.get('api/cancer/all').then(res => {\r\n            setCancerStats(res.data)\r\n        })\r\n        await setIsLoading(false)\r\n    }\r\n\r\n    const addToCancerPending = async () => {\r\n        await setIsLoading(true)\r\n        await axios.post('/api/cancer/add',state)\r\n        await grabStats()\r\n        await returnZeros()\r\n        await setIsLoading(false)\r\n    }\r\n\r\n\r\n    // ---- THESE BLOCKS FOR SEARCHING ----- ///\r\n    const filterCancer = cancerStats.filter(element => element.id.toString().includes(cancerSearch))\r\n\r\n    const mappedCancerStatsS = filterCancer.map(element => {            \r\n        return <CancerStat key={element.id} data_id={element.id} eclass={element.class} id={element.id} clump_thickness={element.clump_thickness} uniformity_of_cell_size={element.uniformity_of_cell_size} uniformity_of_cell_shape={element.uniformity_of_cell_shape}  marginal_adhesion={element.marginal_adhesion} single_epithelial_cell_size={element.single_epithelial_cell_size} bare_nuclei={element.bare_nuclei} bland_chromatin={element.bland_chromatin} normal_nuceoli={element.normal_nuceoli} mitoses={element.mitoses} />\r\n    })\r\n    // ------------------------------------- //\r\n\r\n    return(\r\n        <div className=\"display-matrix\">\r\n\r\n            <section className=\"search-bar\" >\r\n                <a onClick={() => setFormOpen(!formOpen)}>add info?</a>\r\n                <a onClick={() => grabStats()}>refresh</a>\r\n                <input onChange={e => setCancerSearch(e.target.value)} type=\"text\" placeholder=\"Search\" className=\"search-input\" />\r\n                <a onClick={() => props.handleForm('currentView','')}>close</a>\r\n            </section>\r\n            \r\n            <form className={`${formOpen ? false : 'hide'}`}>\r\n                <input placeholder=\"id\" onChange={e => handleInputChange('id',e)}/>\r\n                <input placeholder=\"Clump Thickness\" onChange={e => handleInputChange('clump_thickness',e)}/>\r\n                <input placeholder=\"Uniformity of cell size\" onChange={e => handleInputChange('uniformity_of_cell_size',e)}/>\r\n                <input placeholder=\"Uniformity of cell shape\" onChange={e => handleInputChange('uniformity_of_cell_shape',e)}/>\r\n                <input placeholder=\"Marginal adhesion\" onChange={e => handleInputChange('marginal_adhesion',e)}/>\r\n                <input placeholder=\"Sinlge opithelial cell size\" onChange={e => handleInputChange('single_epithelial_cell_size',e)}/>\r\n                <input placeholder=\"Bare nuclei\" onChange={e => handleInputChange('bare_nuclei',e)}/>\r\n                <input placeholder=\"Bland nuceoli\" onChange={e => handleInputChange('bland_chromatin',e)}/>\r\n                <input placeholder=\"Normal nuceoli\" onChange={e => handleInputChange('normal_nuceoli',e)}/>\r\n                <input placeholder=\"Mitoses\" onChange={e => handleInputChange('mitoses',e)}/>\r\n                <button onClick={() => addToCancerPending()}>submit</button>\r\n            </form>\r\n            \r\n            <section className=\"stats-container\">\r\n                {isLoading ? <Loading/> : null}\r\n                <header className=\"data-spec\">\r\n                    <strong>id</strong>\r\n                    <strong>clump Thickness</strong>\r\n                    <strong>unif. cell size</strong>\r\n                    <strong>unif. cell shape</strong>\r\n                    <strong>marg. adhesion</strong>\r\n                    <strong>single epi. cell size</strong>\r\n                    <strong>bare nuclei</strong>\r\n                    <strong>bland chrom.</strong>\r\n                    <strong>norm. nuceoli</strong>\r\n                    <strong>mitoses</strong>\r\n                    <strong>results</strong>\r\n                </header>\r\n\r\n                <div className=\"data-spec-list\" >{mappedCancerStatsS}</div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CancerDisplay","import './Info.css'\r\n\r\nconst Employee = (props) => {\r\n\r\n    const { id,index,name,age,start_month,start_year,end_month,end_year,employment_duration,distance,married,pay,attendance } = props\r\n\r\n    let data_num = id % 2 === 0\r\n\r\n    return(\r\n        <div className=\"scrollitems\">\r\n        {/* <div className={`scrollitems emp-a ${data_num ? true : 'scrollitems-dark emp-a'}`}> */}\r\n        {/* {data_num === true ? (<a>true</a>) : (<a>false  </a>)} */}\r\n        <a>{name}</a>\r\n        <a>{age}</a>\r\n        <a>{start_month}</a>\r\n        <a>{start_year}</a>\r\n        <a>{end_month}</a>\r\n        <a>{end_year}</a>\r\n        <a>{employment_duration}</a>\r\n        <a>{distance}</a>\r\n        <a>{married}</a>\r\n        <a>{pay}</a>\r\n        <a>{attendance}</a>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Employee","// import './Titanic.css'\r\nimport React, { useState } from 'react'\r\n\r\nconst PassengerRow = (props) => {\r\n\r\n    const { survived,pclass,name,sex,siblings_spouses_aboard,parents_children_aboard,fare } = props\r\n    const firstName = name.split(' ')[1]\r\n    const lastName = name.split(' ')[2]\r\n    var [fullname,setFullName] = useState(false)\r\n\r\n    return(\r\n        // <div className=\"scrollitems\" onClick={() => setFullName(!fullname)} >\r\n        <tr onClick={() => setFullName(!fullname)} >\r\n            <td>{fullname === false ? `${firstName.split('')[0]}  ${lastName.split('')[0]}` : `${firstName} ${lastName}`}</td>\r\n            <td>{pclass}</td>\r\n            <td>{sex}</td>\r\n            <td>{siblings_spouses_aboard}</td>\r\n            <td>{parents_children_aboard}</td>\r\n            <td>{fare}</td>\r\n            <td>{survived > 0 ? 'survived' : 'perished'}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default PassengerRow","import Loading from \"../../Loading/Loading\"\r\nimport { useState,useEffect } from \"react\"\r\nimport axios from \"axios\"\r\nimport PassengerRow from \"./PassengerRow\"\r\n\r\n\r\nconst TitanicDisplay = (props) => {\r\n\r\n    const specItemWidth = '14.25%'\r\n    const [state,setState] = useState({})\r\n\r\n    const returnZeros = () => { // sets / resets form values\r\n        setState({\r\n            age:0,\r\n            survived:0,\r\n            fare:0,\r\n            sex:0,\r\n            siblings_spouses_aboard:0,\r\n            parents_children_aboard:0,\r\n            pclass:0,\r\n            index:0\r\n        })\r\n    }\r\n\r\n    const [titanicPassengers, setTitanicPassengers] = useState([])\r\n    const [passengerSearch,setPassengerSearch] = useState('')\r\n    const [formOpen,setFormOpen] = useState(false)\r\n    const [isLoading,setIsLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        grabStats()\r\n        returnZeros()\r\n    },[])\r\n\r\n    const handleInputChange = (prop,event) => {\r\n        event.persist();\r\n        setState((state) => ({\r\n            ...state,\r\n            [prop]: event.target.value,\r\n        }));\r\n    };\r\n\r\n    const grabStats = async () => {\r\n        await setIsLoading(true)\r\n        await axios.get('api/passengers/all').then(res => {\r\n            setTitanicPassengers(res.data)\r\n        })\r\n        await setIsLoading(false)\r\n    }\r\n\r\n    const addToCancerPending = async () => {\r\n        await setIsLoading(true)\r\n        await axios.post('/api/pessenger/add',state)\r\n        await grabStats()\r\n        await returnZeros()\r\n        await setIsLoading(false)\r\n    }\r\n\r\n    const filterPassenger = titanicPassengers.filter(element => element.name.toString().includes(passengerSearch))\r\n    const mappedPassengers = filterPassenger.map(element => {            \r\n        return <PassengerRow key={element.index} index={element.index} pclass={element.pclass} siblings_spouses_aboard={element.siblings_spouses_aboard} parents_children_aboard={element.parents_children_aboard} age={element.age} survived={element.survived} sex={element.sex} fare={element.fare} name={element.name} />\r\n    })\r\n\r\n    return(\r\n        <div className=\"display-matrix\">\r\n            <section className=\"search-bar\" >\r\n                <a onClick={() => setFormOpen(!formOpen)}>add info?</a>\r\n                <a onClick={() => grabStats()}>refresh</a>\r\n                <input onChange={e => setPassengerSearch(e.target.value)} type=\"text\" placeholder=\"Search\" />\r\n                <a className=\"p-search-line\" onClick={() => props.handleForm('currentView','')}>close</a>\r\n            </section>\r\n            <form className={`${formOpen ? false : 'hide'}`} style={{top:'40px',left:'30px'}} >\r\n                <input placeholder=\"name\" onChange={e => handleInputChange('name',e)}/>\r\n                <input placeholder=\"class\" onChange={e => handleInputChange('class',e)}/>\r\n                <input placeholder=\"gender\" onChange={e => handleInputChange('gender',e)}/>\r\n                <input placeholder=\"age\" onChange={e => handleInputChange('age',e)}/>\r\n                <input placeholder=\"siblings / spouses on board\" onChange={e => handleInputChange('siblings_spouses_aboard',e)}/>\r\n                <input placeholder=\"parents / children on board\" onChange={e => handleInputChange('parents_children_aboard',e)}/>\r\n                <input placeholder=\"result\" onChange={e => handleInputChange('results',e)}/>\r\n                <button onClick={() => addToCancerPending()}>submit</button>\r\n            </form>\r\n\r\n            {isLoading ? <Loading/> : null}\r\n\r\n            <table >\r\n\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{width:specItemWidth}} >name</th>\r\n                        <th style={{width:specItemWidth}}>class</th>\r\n                        <th style={{width:specItemWidth}}>gender</th>\r\n                        <th style={{width:specItemWidth}}>siblings<br/>spouses</th>\r\n                        <th style={{width:specItemWidth}}>parents<br/>children</th>\r\n                        <th style={{width:specItemWidth}}>Fare</th>\r\n                        <th style={{width:specItemWidth}}>results</th>\r\n                    </tr>\r\n                </thead>\r\n                    {/* -- ORIGINAL -- */}\r\n                    {/* <div className=\"data-spec-list\" >{mappedPassengers}</div> */}\r\n\r\n                <tbody>{mappedPassengers}</tbody>\r\n          \r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TitanicDisplay","import './Documents.css'\r\nimport { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst OneDoc = (props) => {\r\n\r\n    const { body,title,memo_id,category } = props\r\n    var [ state,setState ] = useState({\r\n        body:body,\r\n        title:title,\r\n        memo_id:memo_id,\r\n        category:category\r\n    })\r\n\r\n    const input = (prop,event) => {\r\n        event.persist();\r\n        setState((state) => ({\r\n            ...state,\r\n            [prop]: event.target.value,\r\n        }));\r\n    };\r\n\r\n    const handleDB = (state) => {\r\n        props.DB(state)\r\n    }\r\n\r\n    return(\r\n    <form className=\"admin-memo-body\" style={{opacity:'.8'}} >\r\n        <header className='data-spec' >\r\n            <strong onClick={() => props.grabDocs(true)}>close</strong>\r\n            {!props.memo_id ? null :<strong onClick={() => props.deleteDoc(state)}>delete</strong>}\r\n            <strong onClick={() => handleDB(state)} >{props.isLoading ? 'saving...' : 'save'}</strong>\r\n        </header>\r\n        <textarea value={state.title} onChange={(e) => input('title',e)} ></textarea>\r\n        <textarea value={state.body} onChange={(e) => input('body',e)} rows=\"10\"  > </textarea>\r\n        <textarea value={state.category} onChange={(e) => input('category',e)} ></textarea>\r\n    </form>)\r\n}\r\n\r\nexport default OneDoc","import OneDoc from \"./OneDoc\"\r\nimport '../../Table/Table.css'\r\nimport Loading from \"../../Loading/Loading\"\r\nimport { useState,useEffect } from \"react\"\r\nimport axios from \"axios\"\r\n\r\nconst Documents = (props) => {\r\n\r\n    const [docs,setDocs] = useState([]) // -- All docs in DB\r\n    const [isLoading,setIsLoading] = useState(false)\r\n    const [create,setCreate] = useState(false) // -- Create new document\r\n    const [selected,setSelected] = useState(null) // -- For displaying currently selected document\r\n    const currentDoc = localStorage['currentDoc'] // -- For auto loading currently selected document\r\n    const width = '50%'\r\n\r\n    useEffect(() => {\r\n        grabDocs()\r\n        if(localStorage['currentDoc'] === undefined){\r\n            localStorage.setItem('currentDoc','null')\r\n        }\r\n        selectMemo(currentDoc)\r\n    },[])\r\n\r\n// ------------ DB managment ------------------ //\r\n    // -- Create new document -- //\r\n    const newDoc = (state) => {\r\n        setIsLoading(true)\r\n        axios.post('/api/memos/new',state).then(res => {\r\n            selectMemo(res.data.memo_id)\r\n            setCreate(false)\r\n            setIsLoading(false)\r\n            grabDocs()\r\n        })\r\n    }\r\n    // -- Update document -- //\r\n    const sendUpdate = (state) => {\r\n        setIsLoading(true)\r\n        axios.put('/api/memos/update', state).then(() => setIsLoading(false))\r\n    }\r\n    // -- Get all docs - Reset current doc if param === true -- //\r\n    const grabDocs = async (clearCurrent) => { \r\n        if(clearCurrent){selectMemo('null')}\r\n        await setIsLoading(true)\r\n        await axios.get('/api/memos/get').then(res => {\r\n            setDocs(res.data)\r\n            setIsLoading(false)\r\n        }).catch(err => console.log('error',err))\r\n    }\r\n    // -- Delete document -- //\r\n    const deleteDoc = (state) => {\r\n        setIsLoading(true)\r\n        axios.delete(`/api/memos/delete/${state.memo_id}`).then(() => {\r\n            grabDocs(true)\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n// --------------------------------------------------- //\r\n\r\n    // -- Select doc to open -- //\r\n    const selectMemo = (id) => {\r\n        localStorage.setItem('currentDoc',id)\r\n        setSelected(id)\r\n    }\r\n\r\n    // -- Find & Display Currently Selected Doc -- //\r\n    const currentItem = docs.filter(docEl => docEl.memo_id === parseInt(selected)) \r\n    const mappedItem = currentItem.map(el => {\r\n        return <OneDoc key={el.memo_id} body={el.body} memo_id={el.memo_id} title={el.title} category={el.category} grabDocs={grabDocs} DB={sendUpdate} isLoading={isLoading} deleteDoc={deleteDoc} />\r\n    })\r\n\r\n    // -- List of all Docs in DB -- //\r\n    const mappedDocList = docs.map(el => {\r\n        return (\r\n        <tr key={el.memo_id} memo_id={el.memo_id} category={el.category} onClick={() => selectMemo(el.memo_id)} style={{padding:'10px',width:'100%',backgroundColor:''}} >\r\n            <td style={{width:width}} >{el.title}</td>\r\n            <td style={{width:width}} >{el.category}</td>\r\n        </tr>)\r\n    })\r\n\r\n    return(\r\n        <div className=\"display-matrix\">\r\n            <section className=\"search-bar\" style={{margin:'0px'}}>\r\n\r\n                {isLoading ? <Loading/> : null}\r\n\r\n                <a onClick={() => grabDocs(true)}>reload all</a>\r\n\r\n                {selected === 'null' ? <a onClick={() => setCreate(!create)} >{!create ? 'new' : 'cancel'}</a> : null}\r\n\r\n                <a onClick={() => props.handleForm('currentView','')}>close doc</a>\r\n\r\n            </section>\r\n    \r\n            <section>\r\n                {/* {selected === 'null' ? <thead><th style={{width:width,backgroundColor:'red'}} >Title</th><th style={{width:width}} >category</th></thead> : null} */}\r\n                \r\n                {!create ? (selected === 'null' ? \r\n                <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{width:width,backgroundColor:''}} >Title</th>\r\n                        <th style={{width:width,backgroundColor:''}} >category</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody  style={{margin:''}}>{mappedDocList}</tbody>\r\n                </table>\r\n                 : mappedItem) : <OneDoc body={'title'} memo_id={null} title={'title'} category={'category'} selectMemo={selectMemo} DB={newDoc} isLoading={isLoading} />}\r\n\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Documents","import axios from 'axios'\r\n\r\nconst initialState = {\r\n    user: {},\r\n    isLoggedIn:false,\r\n    isLoading:false,\r\n    isError:false\r\n}\r\n\r\nconst LOGIN_USER = 'LOGIN_USER'\r\nconst LOGOUT_USER = 'LOGOUT_USER'\r\nconst BROWSER_LOGIN = 'BROWSER_LOGIN'\r\n\r\nexport function loginUser(email, password, browser_id) {\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: axios.post('/api/auth/login', {email,password,browser_id}).catch(err => console.log('error',err))\r\n    }\r\n}\r\n\r\nexport function browserLogin(email,browser_id) {\r\n    console.log('hit function',email,browser_id)\r\n    return {\r\n        type:BROWSER_LOGIN,\r\n        payload: axios.post('/api/auth/browser/login', {email,browser_id}).catch(err => console.log('error',err))\r\n    }\r\n}\r\n\r\nexport function logoutUser() {\r\n    return {\r\n        type: LOGOUT_USER,\r\n        payload: axios.get('/api/auth/logout')\r\n    }\r\n}\r\n\r\n// export function registerUser(first_name,last_name,email,password) {\r\n\r\n// }\r\n\r\nexport default function userReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        // ---- MANUAL LOGIN ---- //\r\n        case LOGIN_USER + '_PENDING':\r\n            return {\r\n                ...state,\r\n                isLoading:true\r\n            }\r\n            case LOGIN_USER + '_FULFILLED':\r\n\r\n            return {\r\n                ...state,\r\n                user: action.payload.data, isLoggedIn:true, isLoading:false\r\n            }\r\n        case LOGIN_USER + '_REJECTED':\r\n            \r\n            return {\r\n                ...state,\r\n                isLoading:false,\r\n                isError:true\r\n            }\r\n\r\n        // ---- AUTO LOGIN ---- //\r\n        case BROWSER_LOGIN + '_PENDING':\r\n            return {\r\n                ...state,\r\n                isLoading:true,\r\n            }\r\n        case BROWSER_LOGIN+ '_FULFILLED':\r\n            console.log('hit fulfilled')\r\n            return {\r\n                ...state,\r\n                user: action.payload.data, isLoggedIn:true, isLoading:false\r\n            }\r\n        case BROWSER_LOGIN + '_REJECTED':\r\n            return {\r\n                ...state,\r\n                isLoading:false,\r\n                isError:true\r\n            }\r\n\r\n        // ---- LOGOUT ---- //\r\n        case LOGOUT_USER + '_PENDING':\r\n            return {\r\n                ...state, isLoading: true,\r\n            }\r\n\r\n        case LOGOUT_USER + '_FULFILLED':\r\n            return {\r\n                ...state, isLoggedIn: false,\r\n                user: {},\r\n            }\r\n\r\n        default:\r\n            return state \r\n    }\r\n}","import { useState } from \"react\";\r\nimport './Line.css'\r\n\r\nconst Line = (props) => {\r\n\r\n    const [ state,setState ] = useState({\r\n        speedInFPM:0, // in feet per min\r\n        profileLength:0, // in inches\r\n        rows:0,\r\n        columns:0,\r\n        extrudes:0 // extrudes one or two ?\r\n    })\r\n    const [time,setTime] = useState(0)\r\n    const [ error,setError ] = useState(null)\r\n    \r\n    const execute = () => {\r\n        const { speedInFPM,profileLength,rows,columns,extrudes } = state\r\n\r\n        var totalLength = (rows * columns) * (profileLength / 12) \r\n        var totalMins = ( totalLength / speedInFPM ) / extrudes // -- Total length of all pieces in feet\r\n\r\n        if(extrudes === 1 || extrudes === 2) {\r\n            setTime(getTime(totalMins)) // Total time per order\r\n        } else {setError('How many profiles is extruder running?')}\r\n\r\n        setState((state) => ({...state,extrudes:0}))\r\n    }\r\n\r\n    const getTime = (mins) => {\r\n        const hours = mins / 60\r\n        var remainingMins = (mins % 60)\r\n        var returnTime = Math.floor(hours) + ':' + (remainingMins < 10 ? '0' + Math.floor(remainingMins) : Math.floor(remainingMins))\r\n        return returnTime\r\n      }\r\n\r\n    const input = (prop,event) => {\r\n        event.persist();\r\n        setState((state) => ({\r\n            ...state,\r\n            [prop]: parseInt(event.target.value),\r\n        }));\r\n    };\r\n\r\n    return(\r\n        <form style={{maxWidth:'400px'}} >\r\n            {error != null ?\r\n            <div style={{position:'absolute',backgroundColor:'grey',height:'80px'}} onClick={() => setError(null)}>\r\n                {error}\r\n            </div> : null}\r\n            <strong>Time</strong><strong style={{marginLeft:'60px'}} >{time}</strong>\r\n\r\n            <input placeholder=\"speed in FPS\" type=\"number\" onChange={(e) => input('speedInFPM',e)} />\r\n\r\n            <input placeholder=\"Length in Inches\" onChange={(e) => input('profileLength',e)} />\r\n\r\n            <input placeholder=\"Rows\" onChange={(e) => input('rows',e)} />\r\n\r\n            <input placeholder=\"Columns\" onChange={(e) => input('columns',e)} />\r\n\r\n            <input placeholder=\"Pieces per extruder\" onChange={(e) => input('extrudes',e)} />\r\n\r\n            <button className=\"btn\" style={{bottom:'5px',left:'60%'}} onClick={() => execute()} >\r\n                <strong>Run</strong>\r\n            </button>\r\n\r\n            <button className=\"btn\" style={{bottom:'5px',left:'20%'}} onClick={() => props.selectView('currentView','')} >\r\n                <strong>exit</strong>\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Line","import './ProtoDisplay.css'\r\n// import Table from \"../../Table/Table\"\r\nimport Line from '../ProductionLine/Line'\r\n\r\nconst ProtoDislplay = (props) => {\r\n\r\n    const table_name = 'titanic_data'\r\n    const endpoint = 'api/passengers/all'\r\n\r\n    return(\r\n        <div className='proto-container' >\r\n            <Line selectView={props.selectView} />\r\n            {/* <Table endpoint={endpoint} table_name={table_name} /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProtoDislplay","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport './Info.css'\r\nimport '../Table/Table.css'\r\nimport CancerDisplay from './CancerStats/CancerDisplay'\r\nimport Employee from './Employee'\r\nimport TitanicDisplay from './Titanic/TitanicDisplay'\r\nimport Documents from './Documents/Documents'\r\nimport { connect } from 'react-redux'\r\nimport { logoutUser, browserLogin } from './../../redux/userReducer'\r\n// import Table from '../Table/Table'\r\nimport ProtoDislplay from './Prototype/ProtoDisplay'\r\n\r\nclass Info extends Component {\r\n    constructor(props){\r\n        super();\r\n\r\n        this.state = {\r\n            // isLoading:false,\r\n\r\n            // employee data //\r\n            employeeDataInput:false,\r\n            employeeSearch:\"\",\r\n            nvpEmployees:[],\r\n\r\n            // - selecting view - //\r\n            currentView:'',\r\n\r\n            // - selecting menu - //\r\n            currentMenu:'',\r\n            \r\n        }\r\n        this.handleForm = this.handleForm.bind(this)\r\n        this.addEmployeeData = this.addEmployeeData.bind(this)\r\n        this.refreshEmployees = this.refreshEmployees.bind(this)\r\n        this.selectView = this.selectView.bind(this)\r\n    }\r\n\r\n    theWindow(prop,val){\r\n        localStorage.setItem(prop,val)\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { auth } = this.props.user.user \r\n        const browser_id = localStorage['browser_id']\r\n        const savedEmail = localStorage['email']\r\n        if(auth != true){this.props.browserLogin(savedEmail,browser_id)}\r\n\r\n        const uniqueId = () => {\r\n            const s4 = () => Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n            return s4() + s4() + '-' + s4();\r\n          };\r\n        if(browser_id === undefined){this.theWindow('browser_id',uniqueId())}\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const { isLoggedIn } = this.props.user\r\n        if(isLoggedIn === false){this.props.history.push('/')}\r\n    }\r\n\r\n    handleLogout() {\r\n        const uniqueId = () => {\r\n            const s4 = () => Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n            return s4() + s4() + '-' + s4();\r\n          };\r\n        this.theWindow('browser_id',uniqueId())\r\n        this.theWindow('email',undefined)\r\n        this.props.logoutUser()\r\n    }\r\n\r\n    // ---- State Management ---- //\r\n    handleForm(prop,val) {\r\n        this.setState({\r\n            [prop]:val\r\n        })\r\n    }\r\n\r\n    // --- selecting views --- //\r\n    selectView(prop,val) {\r\n        this.handleForm(prop,val)\r\n        this.setState({currentMenu:''})\r\n    }\r\n\r\n    // --- selecting menus --- //\r\n    openMenu(prop,val) {\r\n        if(val === this.state[prop]) { // --- closes menu if already open\r\n            return this.setState({currentMenu:''})\r\n        } else {\r\n            return this.handleForm(prop,val)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    // ---- Employee data functions ---- //\r\n    handleEmployeeSearch = (filter) => {\r\n        this.setState({employeeSearch:filter})\r\n    }\r\n    addEmployeeData() {\r\n        this.setState({employeeDataInput:!this.state.employeeDataInput})\r\n    }\r\n    refreshEmployees = async () => {\r\n        this.resetEmployeeStats().then(\r\n            axios.get('api/employees/all').then(res => {\r\n                this.setState({nvpEmployees:res.data})\r\n            })\r\n        )}\r\n    resetEmployeeStats = async () => {\r\n        this.setState({\r\n            nvpEmployees:[],\r\n            employeeSearch:\"\"\r\n        })\r\n    }\r\n    // ---------------------------------- //\r\n\r\n    render(){\r\n        \r\n        const { currentView,employeeDataInput,isLoading,currentMenu,showMachineLearning,data3View: employeeView,cancerSearch,dataItems,dataItems1,dataView,data1View,data2View: cancerView,cancerDataInput,cancerStats,isMobile,evenTable,nvpEmployees,employeeSearch,cols,showPassengers: passengersView,passengers } = this.state\r\n        const filterEmployee = nvpEmployees.filter(element => element.name.toString().includes(employeeSearch))\r\n        const mappedEmployees = filterEmployee.map(element => {\r\n            return <Employee key={element.index} id={element.index} name={element.name} age={element.age} start_month={element.start_month} start_year={element.start_year} end_month={element.end_month} end_year={element.end_year} employment_duration={element.employment_duration} distance={element.distance} married={element.married} pay={element.pay} attendance={element.attendance} />\r\n        })\r\n        \r\n        return(\r\n            <div className=\"info-container\">\r\n                <header className=\"data-header\">\r\n\r\n                    <section><h3 className=\"info-h4\" onClick={() => this.openMenu('currentMenu','db')} >Database</h3>\r\n                        <form className={`${currentMenu === 'db' ? true : 'hide'}`}>\r\n                            <h4 className={`${currentView === 'tableView' ? 'selected' : null}`} onClick={() => this.selectView('currentView','tableView')}>prototype</h4>\r\n                            <h4 className={` ${currentView === 'cancerView' ? 'selected' : null}`} onClick={() => this.selectView('currentView','cancerView')}>cancer stats</h4>\r\n                            <h4 className={`${currentView === 'passengersView' ? 'selected' : null}`} onClick={() => this.selectView('currentView','passengersView')}>Titanic</h4>\r\n                            <h4 className={`${currentView === 'employeeView' ? 'selected' : null}`} onClick={() => this.selectView('currentView','employeeView')}>employees</h4>\r\n                        </form>\r\n                    </section>\r\n\r\n                    <section><h3 className=\"info-h3\"  onClick={() => this.openMenu('currentMenu','ml')} >machine learning</h3>\r\n                        {/* <div className={`database-dropdown ${!showMachineLearning ? true : 'database-dropdown-hide'}`}>\r\n                            { (<h4 className=\"info-h3\">regression</h4>) : (<h4 className=\"info-h4-selected\" >regression</h4>)}\r\n                            {(<h4 className=\"info-h3\" >classification</h4>) : (<h4 className=\"info-h4-selected\" >classification</h4>)}\r\n                            {(<h4 className=\"info-h3\" >clustering</h4>) : (<h4 className=\"info-h4-selected\" >clustering</h4>)}\r\n                            {(<h4 className=\"info-h3\" >association rule learning</h4>) : (<h4 className=\"info-h4-selected\" >association rule learning</h4>)}\r\n                            {(<h4 className=\"info-h3\" >reinforcement learning</h4>) : (<h4 className=\"info-h4-selected\" >reinforcement learning</h4>)}\r\n                            {(<h4 className=\"info-h3\" >neural networks</h4>) : (<h4 className=\"info-h4-selected\" >deep learning</h4>)}\r\n                            {(<h4 className=\"info-h3\" >natural language processing</h4>) : (<h4 className=\"info-h4-selected\" >natural language processing</h4>)}\r\n                            {(<h4 className=\"info-h3\" >dimensionality reduction</h4>) : (<h4 className=\"info-h4-selected\" >dimensionality reduction</h4>)}\r\n                        </div> */}\r\n\r\n                    <form className={`${currentMenu === 'ml' ? true : 'hide'}`}>\r\n                        <h4>neural networks</h4>\r\n                    </form>\r\n                    </section>\r\n\r\n                    <section><h3 onClick={() => this.selectView('currentView','docsView')} >documents</h3></section>\r\n\r\n                </header>\r\n             \r\n\r\n                    <i style={{marginLeft:'75%'}} onClick={() => this.handleLogout()}>logout</i>\r\n\r\n                    {currentView === 'cancerView' ? <CancerDisplay handleForm={this.handleForm} /> : null}\r\n\r\n                    {currentView === 'passengersView' ? <TitanicDisplay handleForm={this.handleForm} /> : null}\r\n\r\n                    {currentView === 'docsView' ? <Documents handleForm={this.handleForm} theWindow={this.theWindow} /> : null}\r\n\r\n                    {currentView === 'tableView' ? <ProtoDislplay selectView={this.selectView} /> : null}\r\n                    \r\n\r\n                    {/* MOVING THIS CODE TO EXTERNAL */}\r\n                    {/* {employeeView ? \r\n                    <div>\r\n                        <div className=\"search-bar\" ><p className=\"p-search-line\"  onClick={this.addEmployeeData}>add info?</p><p className=\"p-search-line\" onClick={this.refreshEmployees}>refresh</p><input onChange={e => this.handleEmployeeSearch(e.target.value)} type=\"text\" placeholder=\"Search\" className=\"search-input\" /></div>\r\n                        <div className={`cancer-stats-input ${employeeDataInput ? false : 'cancer-stats-input-hide'}`}>\r\n                                <div className=\"input-element\"><input placeholder=\"\" onChange={e => this.handleForm('id',e.target.value)}/></div>\r\n                                <button>submit</button>\r\n                        </div>\r\n                        <div className=\"data-spec\"><a>Name</a><a>Age</a><a>Start Month</a><a>Start Year</a><a>End Month</a><a>End Year</a><a>Employment Duration</a><a>Distance</a><a>Married</a><a>Pay Rate</a><a>Attendance</a></div>\r\n                        <div className=\"stats-container\">\r\n                            {isLoading ? <Loading/> : null}\r\n                                <span className=\"data-spec-list\">{mappedEmployees}</span>\r\n                        </div>\r\n\r\n                    </div> : null} */}\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(reduxState) {\r\n    return reduxState\r\n}\r\n\r\nexport default connect(mapStateToProps, {logoutUser,browserLogin})(Info)","import React, { Component } from 'react'\r\nimport './Auth.css'\r\nimport { loginUser,browserLogin } from '../../redux/userReducer'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Auth extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            email:'',\r\n            password:'',\r\n        }\r\n    }\r\n\r\n    theWindow(prop,val){\r\n        localStorage.setItem(prop,val)\r\n    }\r\n\r\n    componentDidMount(){\r\n        const browser_id = localStorage['browser_id']\r\n        const uniqueId = () => {\r\n            const s4 = () => Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n            return s4() + s4() + '-' + s4();\r\n          };\r\n\r\n        if(browser_id === undefined){this.theWindow('browser_id',uniqueId())}\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        const { auth,email } = this.props.user.user\r\n\r\n        if(auth === true) {\r\n            this.theWindow('email',email)\r\n            this.props.history.push(`/info`)\r\n        }\r\n    }\r\n\r\n    handleChange(prop,val){\r\n        this.setState({\r\n            [prop]: val\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { email,password } = this.state\r\n        const browser_id = localStorage['browser_id'] // -- Added to user table\r\n\r\n        return(\r\n               <div className=\"auth-container\">\r\n                    <h1 style={{color:'black'}} >Data Structures</h1>\r\n                    <div>\r\n                        <p >Email:</p>\r\n                        <input placeholder=\"email\" onChange={e => this.handleChange('email', e.target.value)} style={{width:'100%'}} />\r\n                    </div>\r\n                    <div>\r\n                        <p >Password:</p>\r\n                        <input type='password' onChange={e => this.handleChange('password', e.target.value)} style={{width:'100%'}} />\r\n                    </div>\r\n                    <div >\r\n                        <button onClick={() => this.props.loginUser(email,password,browser_id)}> Login </button>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(reduxState){\r\n    return reduxState\r\n}\r\n\r\nexport default connect(mapStateToProps, {loginUser,browserLogin})(Auth)","\r\n   \r\nimport React from 'react' \r\nimport { Switch, Route } from 'react-router-dom'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport Info from './Components/Information/Info'\r\nimport Auth from './Components/Auth/Auth'\r\n\r\nexport default (\r\n    <Switch>\r\n        <Route exact path=\"/\" component={Auth} />\r\n        <Route path=\"/info\" component={Info} />\r\n    </Switch>\r\n)","export default __webpack_public_path__ + \"static/media/logo.8a76484b.png\";","import './Header.css'\r\nimport image from '../logo.png'\r\n\r\nconst Header = (props) => {\r\n    return(\r\n        <header className=\"header\">\r\n            <img src={image} className=\"logo\" alt=\"CD\"/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import './App.css';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport routes from './routes'\r\nimport Auth from './Components/Auth/Auth'\r\nimport Header from './Components/Header/Header';\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n    <div className=\"App\">\r\n      <Header/>\r\n      {routes}\r\n    </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import axios from \"axios\";\r\n\r\nconst initialState = {\r\n  // characters: []\r\n  characters: {}\r\n};\r\n\r\nconst UPDATE_CHARACTERS = \"UPDATE_CHARACTERS\";\r\n\r\nexport function updateCharacters() {\r\n  return {\r\n    type: UPDATE_CHARACTERS,\r\n    payload: axios.get(\"https://www.breakingbadapi.com/api/characters\")\r\n    // payload: axios.get('/api/projects/all')\r\n  };\r\n}\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case UPDATE_CHARACTERS + \"_FULFILLED\":\r\n      return {\r\n        ...state,\r\n        characters: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","// import { createStore } from 'redux'\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux' \r\nimport reduxPromiseMiddleware from 'redux-promise-middleware'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport userReducer from './userReducer'\r\nimport breakingBadReducer from './breakingBadReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    user: userReducer,\r\n    characters: breakingBadReducer\r\n})\r\n\r\nexport default createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(reduxPromiseMiddleware))\r\n  )\r\n\r\n// export default createStore(userReducer)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\nimport { BrowserRouter, HashRouter  } from 'react-router-dom'\r\nconst Router = process.env.NODE_ENV === 'development' ? HashRouter : BrowserRouter;\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n    <Provider store={store}>\r\n    <App />\r\n    </Provider>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}