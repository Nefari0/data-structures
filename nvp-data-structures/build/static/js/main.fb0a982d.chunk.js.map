{"version":3,"sources":["Components/Information/CancerStats/CancerStat.js","Components/Loading/Loading.js","Components/Information/CancerStats/CancerDisplay.js","Components/Information/Employee.js","Components/Information/Titanic/PassengerRow.js","Components/Information/Titanic/TitanicDisplay.js","Components/Confirmation/Confirmation.js","Components/Information/Documents/OneDoc.js","Components/Information/Documents/Documents.js","Components/Information/Home/Home.js","Components/Information/Links/Link.js","Components/Information/Links/LinkForm.js","Components/Information/Links/Links.js","redux/userReducer.js","Components/Information/ProductionLine/Line.js","Components/Information/Prototype/ProtoDisplay.js","Components/Information/Info.js","Components/Auth/Auth.js","routes.js","Components/logo.png","Components/Header/Header.js","App.js","reportWebVitals.js","redux/breakingBadReducer.js","redux/store.js","serviceWorker.js","index.js"],"names":["CancerStat","props","eclass","id","clump_thickness","uniformity_of_cell_size","uniformity_of_cell_shape","marginal_adhesion","single_epithlial_cell_size","bare_nuclei","bland_chromatin","normal_nuceoli","mitoses","Loading","className","Component","CancerDisplay","useState","state","setState","returnZeros","single_epithelial_cell_size","cancerStats","setCancerStats","cancerSearch","setCancerSearch","formOpen","setFormOpen","isLoading","setIsLoading","useEffect","grabStats","handleInputChange","prop","event","persist","target","value","a","axios","get","then","res","data","addToCancerPending","post","mappedCancerStatsS","filter","element","toString","includes","map","data_id","class","onClick","onChange","e","type","placeholder","handleForm","Employee","index","name","age","start_month","start_year","end_month","end_year","employment_duration","distance","married","pay","attendance","PassengerRow","survived","pclass","sex","siblings_spouses_aboard","parents_children_aboard","fare","firstName","split","lastName","fullname","setFullName","TitanicDisplay","specItemWidth","titanicPassengers","setTitanicPassengers","passengerSearch","setPassengerSearch","mappedPassengers","style","top","left","width","Confirmation","message","deleteFunction","closeDialog","closeDialogParam","backgroundColor","OneDoc","body","title","memo_id","category","deleteDoc","setDeleteDoc","input","grabDocs","DB","handleDB","height","rows","Documents","docs","setDocs","create","setCreate","selected","setSelected","currentDoc","localStorage","currentCategory","search","setSearch","undefined","setItem","selectMemo","searchForCat","val","alpha","toLowerCase","theWindow","sendUpdate","put","clearCurrent","catch","err","console","log","delete","mappedItem","docEl","parseInt","el","mappedDocList","padding","Home","fill","viewBox","stroke","strokeWidth","selectView","strokeLinecap","strokeLinejoin","d","Link","link_id","link_name","url","description","href","rel","LinkForm","handleInput","sendInfo","Links","links","setLinks","getLinks","mappedLinks","initialState","user","isLoggedIn","isError","LOGIN_USER","LOGOUT_USER","BROWSER_LOGIN","browserLogin","email","browser_id","payload","Line","speedInFPM","profileLength","columns","extrudes","time","setTime","error","setError","getTime","mins","hours","remainingMins","Math","floor","parseFloat","position","marginLeft","execute","ProtoDislplay","Info","handleEmployeeSearch","employeeSearch","refreshEmployees","resetEmployeeStats","nvpEmployees","employeeDataInput","currentView","currentMenu","bind","addEmployeeData","auth","this","savedEmail","s4","random","substring","uniqueId","history","push","logoutUser","showMachineLearning","data3View","dataItems","dataItems1","dataView","data1View","data2View","cancerDataInput","isMobile","evenTable","cols","showPassengers","passengers","openMenu","handleLogout","connect","reduxState","Auth","password","color","handleChange","loginUser","exact","path","component","Header","src","image","alt","App","routes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","characters","rootReducer","combineReducers","action","UPDATE_CHARACTERS","createStore","composeWithDevTools","applyMiddleware","reduxPromiseMiddleware","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","Router","BrowserRouter","ReactDOM","render","StrictMode","store","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fb0a982d.chunk.js","sourcesContent":["import '../Info.css'\r\n\r\nconst CancerStat = (props) => {\r\n\r\n    const {eclass,id,clump_thickness,uniformity_of_cell_size,uniformity_of_cell_shape,marginal_adhesion,single_epithlial_cell_size,bare_nuclei,bland_chromatin,normal_nuceoli,mitoses } = props\r\n    return(\r\n        <tr>\r\n            <td>{id}</td>\r\n            <td>{clump_thickness}</td>\r\n            <td>{uniformity_of_cell_size}</td>\r\n            <td>{uniformity_of_cell_shape}</td>\r\n            <td>{marginal_adhesion}</td>\r\n            <td>{single_epithlial_cell_size}</td>\r\n            <td>{bare_nuclei}</td>\r\n            <td>{bland_chromatin}</td>\r\n            <td>{normal_nuceoli}</td>\r\n            <td>{mitoses}</td>\r\n            <td>{eclass}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default CancerStat","import React, { Component } from 'react';\r\nimport './Loading.css'\r\n\r\nclass Loading extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"load-wrapp\">\r\n        <div className=\"load-3\">\r\n          <div className=\"line\"></div>\r\n          <div className=\"line\"></div>\r\n          <div className=\"line\"></div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Loading;","import CancerStat from \"./CancerStat\"\r\nimport Loading from \"../../Loading/Loading\"\r\nimport { useState,useEffect } from \"react\"\r\nimport axios from \"axios\"\r\n\r\nconst CancerDisplay = (props) => {\r\n\r\n    const [state,setState] = useState({})\r\n\r\n    const returnZeros = () => { // sets / resets form values\r\n        setState({\r\n            id:0,\r\n            clump_thickness:0,\r\n            uniformity_of_cell_size:0,\r\n            uniformity_of_cell_shape:0,\r\n            marginal_adhesion:0,\r\n            single_epithelial_cell_size:0,\r\n            bare_nuclei:0,\r\n            bland_chromatin:0,\r\n            normal_nuceoli:0,\r\n            mitoses:0,\r\n        })\r\n    }\r\n\r\n    const [cancerStats,setCancerStats] = useState([])\r\n    const [cancerSearch,setCancerSearch] = useState('')\r\n    const [formOpen,setFormOpen] = useState(false)\r\n    const [isLoading,setIsLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        grabStats()\r\n        returnZeros()\r\n    },[])\r\n\r\n    const handleInputChange = (prop,event) => {\r\n        event.persist();\r\n        setState((state) => ({\r\n            ...state,\r\n            [prop]: event.target.value,\r\n        }));\r\n    };\r\n\r\n    const grabStats = async () => {\r\n        await setIsLoading(true)\r\n        await axios.get('api/cancer/all').then(res => {\r\n            setCancerStats(res.data)\r\n        })\r\n        await setIsLoading(false)\r\n    }\r\n\r\n    const addToCancerPending = async () => {\r\n        await setIsLoading(true)\r\n        await axios.post('/api/cancer/add',state)\r\n        await grabStats()\r\n        await returnZeros()\r\n        await setIsLoading(false)\r\n    }\r\n\r\n\r\n    // ---- THESE BLOCKS FOR SEARCHING ----- ///\r\n    const filterCancer = cancerStats.filter(element => element.id.toString().includes(cancerSearch))\r\n\r\n    const mappedCancerStatsS = filterCancer.map(element => {            \r\n        return <CancerStat key={element.id} data_id={element.id} eclass={element.class} id={element.id} clump_thickness={element.clump_thickness} uniformity_of_cell_size={element.uniformity_of_cell_size} uniformity_of_cell_shape={element.uniformity_of_cell_shape}  marginal_adhesion={element.marginal_adhesion} single_epithelial_cell_size={element.single_epithelial_cell_size} bare_nuclei={element.bare_nuclei} bland_chromatin={element.bland_chromatin} normal_nuceoli={element.normal_nuceoli} mitoses={element.mitoses} />\r\n    })\r\n    // ------------------------------------- //\r\n\r\n    return(\r\n        <div className=\"display-matrix\">\r\n\r\n            <section className=\"search-bar\" >\r\n                <a onClick={() => setFormOpen(!formOpen)}>add info?</a>\r\n                <a onClick={() => grabStats()}>refresh</a>\r\n                <input onChange={e => setCancerSearch(e.target.value)} type=\"text\" placeholder=\"Search\" className=\"search-input\" />\r\n                <a onClick={() => props.handleForm('currentView','home')}>close</a>\r\n            </section>\r\n            \r\n            <form className={`${formOpen ? false : 'hide'}`}>\r\n                <input placeholder=\"id\" onChange={e => handleInputChange('id',e)}/>\r\n                <input placeholder=\"Clump Thickness\" onChange={e => handleInputChange('clump_thickness',e)}/>\r\n                <input placeholder=\"Uniformity of cell size\" onChange={e => handleInputChange('uniformity_of_cell_size',e)}/>\r\n                <input placeholder=\"Uniformity of cell shape\" onChange={e => handleInputChange('uniformity_of_cell_shape',e)}/>\r\n                <input placeholder=\"Marginal adhesion\" onChange={e => handleInputChange('marginal_adhesion',e)}/>\r\n                <input placeholder=\"Sinlge opithelial cell size\" onChange={e => handleInputChange('single_epithelial_cell_size',e)}/>\r\n                <input placeholder=\"Bare nuclei\" onChange={e => handleInputChange('bare_nuclei',e)}/>\r\n                <input placeholder=\"Bland nuceoli\" onChange={e => handleInputChange('bland_chromatin',e)}/>\r\n                <input placeholder=\"Normal nuceoli\" onChange={e => handleInputChange('normal_nuceoli',e)}/>\r\n                <input placeholder=\"Mitoses\" onChange={e => handleInputChange('mitoses',e)}/>\r\n                <button onClick={() => addToCancerPending()}>submit</button>\r\n            </form>\r\n            \r\n            <table>\r\n                {isLoading ? <Loading/> : null}\r\n                <thead>\r\n                    <tr>\r\n                        <th>id</th>\r\n                        <th>clump Thickness</th>\r\n                        <th>unif. cell size</th>\r\n                        <th>unif. cell shape</th>\r\n                        <th>marg. adhesion</th>\r\n                        <th>single epi. cell size</th>\r\n                        <th>bare nuclei</th>\r\n                        <th>bland chrom.</th>\r\n                        <th>norm. nuceoli</th>\r\n                        <th>mitoses</th>\r\n                        <th>results</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>{mappedCancerStatsS}</tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CancerDisplay","import './Info.css'\r\n\r\nconst Employee = (props) => {\r\n\r\n    const { id,index,name,age,start_month,start_year,end_month,end_year,employment_duration,distance,married,pay,attendance } = props\r\n\r\n    let data_num = id % 2 === 0\r\n\r\n    return(\r\n        <div className=\"scrollitems\">\r\n        {/* <div className={`scrollitems emp-a ${data_num ? true : 'scrollitems-dark emp-a'}`}> */}\r\n        {/* {data_num === true ? (<a>true</a>) : (<a>false  </a>)} */}\r\n        <a>{name}</a>\r\n        <a>{age}</a>\r\n        <a>{start_month}</a>\r\n        <a>{start_year}</a>\r\n        <a>{end_month}</a>\r\n        <a>{end_year}</a>\r\n        <a>{employment_duration}</a>\r\n        <a>{distance}</a>\r\n        <a>{married}</a>\r\n        <a>{pay}</a>\r\n        <a>{attendance}</a>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Employee","// import './Titanic.css'\r\nimport React, { useState } from 'react'\r\n\r\nconst PassengerRow = (props) => {\r\n\r\n    const { survived,pclass,name,sex,siblings_spouses_aboard,parents_children_aboard,fare } = props\r\n    const firstName = name.split(' ')[1]\r\n    const lastName = name.split(' ')[2]\r\n    var [fullname,setFullName] = useState(false)\r\n\r\n    return(\r\n        // <div className=\"scrollitems\" onClick={() => setFullName(!fullname)} >\r\n        <tr onClick={() => setFullName(!fullname)} >\r\n            <td>{fullname === false ? `${firstName.split('')[0]}  ${lastName.split('')[0]}` : `${firstName} ${lastName}`}</td>\r\n            <td>{pclass}</td>\r\n            <td>{sex}</td>\r\n            <td>{siblings_spouses_aboard}</td>\r\n            <td>{parents_children_aboard}</td>\r\n            <td>{fare}</td>\r\n            <td>{survived > 0 ? 'survived' : 'perished'}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default PassengerRow","import Loading from \"../../Loading/Loading\"\r\nimport { useState,useEffect } from \"react\"\r\nimport axios from \"axios\"\r\nimport PassengerRow from \"./PassengerRow\"\r\n\r\n\r\nconst TitanicDisplay = (props) => {\r\n\r\n    const specItemWidth = '14.25%'\r\n    const [state,setState] = useState({})\r\n\r\n    const returnZeros = () => { // sets / resets form values\r\n        setState({\r\n            age:0,\r\n            survived:0,\r\n            fare:0,\r\n            sex:0,\r\n            siblings_spouses_aboard:0,\r\n            parents_children_aboard:0,\r\n            pclass:0,\r\n            index:0\r\n        })\r\n    }\r\n\r\n    const [titanicPassengers, setTitanicPassengers] = useState([])\r\n    const [passengerSearch,setPassengerSearch] = useState('')\r\n    const [formOpen,setFormOpen] = useState(false)\r\n    const [isLoading,setIsLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        grabStats()\r\n        returnZeros()\r\n    },[])\r\n\r\n    const handleInputChange = (prop,event) => {\r\n        event.persist();\r\n        setState((state) => ({\r\n            ...state,\r\n            [prop]: event.target.value,\r\n        }));\r\n    };\r\n\r\n    const grabStats = async () => {\r\n        await setIsLoading(true)\r\n        await axios.get('api/passengers/all').then(res => {\r\n            setTitanicPassengers(res.data)\r\n        })\r\n        await setIsLoading(false)\r\n    }\r\n\r\n    const addToCancerPending = async () => {\r\n        await setIsLoading(true)\r\n        await axios.post('/api/pessenger/add',state)\r\n        await grabStats()\r\n        await returnZeros()\r\n        await setIsLoading(false)\r\n    }\r\n\r\n    const filterPassenger = titanicPassengers.filter(element => element.name.toString().includes(passengerSearch))\r\n    const mappedPassengers = filterPassenger.map(element => {            \r\n        return <PassengerRow key={element.index} index={element.index} pclass={element.pclass} siblings_spouses_aboard={element.siblings_spouses_aboard} parents_children_aboard={element.parents_children_aboard} age={element.age} survived={element.survived} sex={element.sex} fare={element.fare} name={element.name} />\r\n    })\r\n\r\n    return(\r\n        <div className=\"display-matrix\">\r\n            <section className=\"search-bar\" >\r\n                <a onClick={() => setFormOpen(!formOpen)}>add info?</a>\r\n                <a onClick={() => grabStats()}>refresh</a>\r\n                <input onChange={e => setPassengerSearch(e.target.value)} type=\"text\" placeholder=\"Search\" />\r\n                <a className=\"p-search-line\" onClick={() => props.handleForm('currentView','home')}>close</a>\r\n            </section>\r\n            <form className={`${formOpen ? false : 'hide'}`} style={{top:'40px',left:'30px'}} >\r\n                <input placeholder=\"name\" onChange={e => handleInputChange('name',e)}/>\r\n                <input placeholder=\"class\" onChange={e => handleInputChange('class',e)}/>\r\n                <input placeholder=\"gender\" onChange={e => handleInputChange('gender',e)}/>\r\n                <input placeholder=\"age\" onChange={e => handleInputChange('age',e)}/>\r\n                <input placeholder=\"siblings / spouses on board\" onChange={e => handleInputChange('siblings_spouses_aboard',e)}/>\r\n                <input placeholder=\"parents / children on board\" onChange={e => handleInputChange('parents_children_aboard',e)}/>\r\n                <input placeholder=\"result\" onChange={e => handleInputChange('results',e)}/>\r\n                <button onClick={() => addToCancerPending()}>submit</button>\r\n            </form>\r\n\r\n            {isLoading ? <Loading/> : null}\r\n\r\n            <table >\r\n\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{width:specItemWidth}} >name</th>\r\n                        <th style={{width:specItemWidth}}>class</th>\r\n                        <th style={{width:specItemWidth}}>gender</th>\r\n                        <th style={{width:specItemWidth}}>siblings<br/>spouses</th>\r\n                        <th style={{width:specItemWidth}}>parents<br/>children</th>\r\n                        <th style={{width:specItemWidth}}>Fare</th>\r\n                        <th style={{width:specItemWidth}}>results</th>\r\n                    </tr>\r\n                </thead>\r\n                    {/* -- ORIGINAL -- */}\r\n                    {/* <div className=\"data-spec-list\" >{mappedPassengers}</div> */}\r\n\r\n                <tbody>{mappedPassengers}</tbody>\r\n          \r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TitanicDisplay","import './Confirmation.css'\r\n// import '../Table/Table.css'\r\n\r\n// --- PROPS INFO & USAGE --- //\r\n// message === warning text (ie \"are you sure?\")\r\n// deleteFunction - function passed from parent which carries out the delete query\r\n// data - should cantain all info required for delete (ie database.table.table_id)\r\n// closeDialog - whatever func from parent closes this dialog box\r\n// closeDialogParam - if closeDialog requires a parameter (ei true / false)\r\n\r\n\r\n\r\nconst Confirmation = (props) => {\r\n\r\n    const { message,deleteFunction,data,closeDialog,closeDialogParam } = props\r\n\r\n    return(\r\n        <div className='confirmation'>\r\n            <header><p>{message}</p></header>\r\n\r\n            <section>\r\n                <a onClick={() => deleteFunction(data)} style={{backgroundColor:'red'}} >yes</a>\r\n                <a onClick={() => closeDialog(closeDialogParam)} >no</a>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Confirmation","import './Documents.css'\r\nimport { useState } from 'react'\r\nimport Confirmation from '../../Confirmation/Confirmation'\r\nconst deleteMessage = 'Delete this document?'\r\n\r\nconst OneDoc = (props) => {\r\n\r\n    const { body,title,memo_id,category } = props\r\n\r\n    var [ deleteDoc,setDeleteDoc ] = useState(false)\r\n    var [ state,setState ] = useState({\r\n        body:body,\r\n        title:title,\r\n        memo_id:memo_id,\r\n        category:category\r\n    })\r\n\r\n    const input = (prop,event) => {\r\n        event.persist();\r\n        setState((state) => ({\r\n            ...state,\r\n            [prop]: event.target.value,\r\n        }));\r\n    };\r\n\r\n    const handleDB = (state) => {\r\n        props.DB(state)\r\n    }\r\n\r\n    return(\r\n    <div className='admin-memo'>\r\n        <table>\r\n            <thead>  \r\n                <tr>\r\n                    <th onClick={() => props.grabDocs(true)}>close</th>\r\n\r\n                    {!props.memo_id ? null : (!deleteDoc ?\r\n                    <th onClick={() => setDeleteDoc(true)}>delete</th>\r\n                        :\r\n                    <th className='confirm' ><Confirmation message={deleteMessage} deleteFunction={props.deleteDoc} data={state} closeDialog={setDeleteDoc} closeDialogParam={false} /></th>)\r\n                    }\r\n\r\n                    <th onClick={() => handleDB(state)} >{props.isLoading ? 'saving...' : 'save'}</th>\r\n                </tr>\r\n            </thead>\r\n        </table>\r\n        \r\n        <section style={{height:'20px'}}>\r\n            <input value={state.title} onChange={(e) => input('title',e)} ></input>\r\n            <input value={state.category} onChange={(e) => input('category',e)} ></input>\r\n        </section>\r\n\r\n        <section>\r\n            <textarea value={state.body} onChange={(e) => input('body',e)} rows=\"\"  > </textarea>\r\n        </section>\r\n        \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default OneDoc","import OneDoc from \"./OneDoc\"\r\nimport '../../Table/Table.css'\r\nimport Loading from \"../../Loading/Loading\"\r\nimport { useState,useEffect } from \"react\"\r\nimport axios from \"axios\"\r\n\r\nconst Documents = (props) => {\r\n\r\n    const [docs,setDocs] = useState([]) // -- All docs in DB\r\n    const [isLoading,setIsLoading] = useState(false)\r\n    const [create,setCreate] = useState(false) // -- Create new document\r\n    const [selected,setSelected] = useState(null) // -- For displaying currently selected document\r\n    const currentDoc = localStorage['currentDoc'] // -- For auto loading currently selected document\r\n    const currentCategory = localStorage['currentCategory']\r\n    const [search,setSearch] = useState('')\r\n    const width = '50%'\r\n\r\n    useEffect(() => {\r\n        grabDocs()\r\n        if(localStorage['currentDoc'] === undefined){\r\n            localStorage.setItem('currentDoc','null')\r\n        }\r\n        selectMemo(currentDoc)\r\n\r\n        if(localStorage['currentCategory'] === undefined){\r\n            localStorage.setItem('currentCategory','')\r\n        }\r\n        setSearch(currentCategory)\r\n\r\n    },[])\r\n\r\n    // -- Search docs by category -- //\r\n    const searchForCat = (val) => {\r\n        var alpha = val.toLowerCase()\r\n        setSearch(alpha)\r\n        props.theWindow('currentCategory',alpha)\r\n    }\r\n\r\n// ------------ DB managment ------------------ //\r\n    // -- Create new document -- //\r\n    const newDoc = (state) => {\r\n        setIsLoading(true)\r\n        axios.post('/api/memos/new',state).then(res => {\r\n            selectMemo(res.data.memo_id)\r\n            setCreate(false)\r\n            setIsLoading(false)\r\n            grabDocs()\r\n        })\r\n    }\r\n    // -- Update document -- //\r\n    const sendUpdate = (state) => {\r\n        setIsLoading(true)\r\n        axios.put('/api/memos/update', state).then(() => setIsLoading(false))\r\n    }\r\n    // -- Get all docs - Reset current doc if param === true -- //\r\n    const grabDocs = async (clearCurrent) => {\r\n        if(clearCurrent){\r\n            selectMemo('null')\r\n            setCreate(false)\r\n        }\r\n        await setIsLoading(true)\r\n        await axios.get('/api/memos/get').then(res => {\r\n            setDocs(res.data)\r\n            setIsLoading(false)\r\n        }).catch(err => console.log('error',err))\r\n    }\r\n    // -- Delete document -- //\r\n    const deleteDoc = (state) => {\r\n        setIsLoading(true)\r\n        axios.delete(`/api/memos/delete/${state.memo_id}`).then(() => {\r\n            grabDocs(true)\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n// --------------------------------------------------- //\r\n\r\n    // -- Select doc to open -- //\r\n    const selectMemo = (id) => {\r\n        localStorage.setItem('currentDoc',id)\r\n        setSelected(id)\r\n    }\r\n\r\n    // -- Find & Display Currently Selected Doc -- //\r\n    const currentItem = docs.filter(docEl => docEl.memo_id === parseInt(selected)) \r\n    const mappedItem = currentItem.map(el => {\r\n        return <OneDoc key={el.memo_id} body={el.body} memo_id={el.memo_id} title={el.title} category={el.category} grabDocs={grabDocs} DB={sendUpdate} isLoading={isLoading} deleteDoc={deleteDoc} />\r\n    })\r\n\r\n    // -- Search for doc by category (default value is empty string) -- //\r\n    const searchedDocs = docs.filter(el => { return el.category.toLowerCase().includes(search) })\r\n    // -- Displays all docs in search list -- //\r\n    const mappedDocList = searchedDocs.map(el => {\r\n        return (\r\n        <tr key={el.memo_id} memo_id={el.memo_id} category={el.category} onClick={() => selectMemo(el.memo_id)} style={{padding:'',width:'100%',backgroundColor:''}} >\r\n            <td style={{width:width}} >{el.title}</td>\r\n            <td style={{width:width}} >{el.category}</td>\r\n        </tr>)\r\n    })\r\n\r\n    return(\r\n        <div className=\"display-matrix\">\r\n            {isLoading ? <Loading/> : null}\r\n            <section className=\"search-bar\" >\r\n\r\n\r\n                <a onClick={() => grabDocs(true)}>reload all</a>\r\n\r\n                <input value={search} placeholder=\"Search\" onChange={(e) => searchForCat(e.target.value)} />\r\n\r\n                <a onClick={() => searchForCat('')} >clear search?</a>\r\n\r\n                <a onClick={() => props.handleForm('currentView','home')}>close doc</a>\r\n\r\n            </section>\r\n    \r\n            <section>\r\n                \r\n                {!create ? (selected === 'null' ? \r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{width:width,backgroundColor:''}} >Title</th>\r\n                            <th style={{width:width,backgroundColor:''}} >category</th>\r\n                            <th style={{width:'30px',backgroundColor:''}} onClick={() => setCreate(true)} ><i>new?</i></th>\r\n                        </tr>\r\n                    </thead>\r\n                <tbody>{mappedDocList}</tbody>\r\n                </table>\r\n                \r\n                 : mappedItem) : <OneDoc body={'text'} memo_id={null} title={'title'} category={'category'} selectMemo={selectMemo} DB={newDoc} grabDocs={grabDocs} isLoading={isLoading} />}\r\n\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Documents","import './Home.css'\r\nimport '../../Icon/Icon.css'\r\n\r\nconst Home = (props) => {\r\n\r\n    return(<div className='home-container' >\r\n\r\n        <svg className='icon' fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2} onClick={() => props.selectView('currentView','docsView')} >\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\r\n        </svg>\r\n\r\n        <svg className='icon' fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2} onClick={() => props.selectView('currentView','tableView')} >\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z\" />\r\n        </svg>\r\n\r\n        <svg className='icon' fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2} onClick={() => props.selectView('currentView','webDevTools')} >\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z\" />\r\n        </svg>\r\n\r\n        {/* --- FOR VIEW SECURE DOCUMENTS --- */}\r\n        {/* <svg className='icon' fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2} onClick={() => props.selectView('currentView','specDocs')}>\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\r\n        </svg> */}\r\n\r\n    </div>)\r\n}\r\n\r\nexport default Home","import './Links.css'\r\n\r\nconst Link = (props) => {\r\n\r\n    const {link_id,link_name,url,description} = props\r\n\r\n    return(\r\n        <a className='link' href={`${url}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {link_name}\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default Link","import { useState } from \"react\"\r\nimport axios from \"axios\"\r\n\r\nconst LinkForm = (props) => {\r\n\r\n    const {link_name,url,link_id,description,setCreate} = props\r\n\r\n    const [state,setState] = useState({\r\n        link_name:link_name,\r\n        link_id:link_id,\r\n        description:description,\r\n        url:url\r\n    })\r\n\r\n    const handleInput = (prop,event) => {\r\n        setState((state) => ({\r\n            ...state,\r\n            [prop]:event.target.value\r\n        }))\r\n    }\r\n\r\n    const sendInfo = () => {\r\n        const { link_id,link_name,description,url } = state\r\n        axios.post('/api/links/new',{link_id,link_name,description,url})\r\n    }\r\n\r\n    return(\r\n        <form className='form'>\r\n            <input placeholder='url' value={description} onChange={(e) => handleInput('url',e)} />\r\n            <input placeholder='link name' onChange={(e) => handleInput('link_name',e)} />\r\n            <input placeholder='description' onChange={(e) => handleInput('description',e)} />\r\n            <button onClick={() => sendInfo()} >Send</button>\r\n            <button onClick={() => setCreate(false)} >Cancel</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LinkForm","import './Links.css'\r\nimport '../Home/Home.css'\r\nimport '../../Table/Table.css'\r\nimport Link from './Link'\r\nimport LinkForm from './LinkForm'\r\nimport { useEffect,useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst Links = (props) => {    \r\n\r\n    const [links,setLinks] = useState([])\r\n    const [create,setCreate] = useState(false)\r\n\r\n    useEffect(() => {getLinks()},[])\r\n\r\n    const getLinks = () => {\r\n        axios.get('/api/links/get').then(res => {\r\n            setLinks(res.data)\r\n        })\r\n    }\r\n    const mappedLinks = links.map(el => {\r\n        return(<Link key={el.link_id} url={el.url} link_name={el.link_name} />)\r\n    })\r\n\r\n    return(<div className='links'>\r\n\r\n        <section className=\"search-bar\" >\r\n\r\n\r\n            {/* <a onClick={() => grabDocs(true)}>reload all</a> */}\r\n\r\n            {/* <input value={search} placeholder=\"Search\" onChange={(e) => searchForCat(e.target.value)} /> */}\r\n\r\n            {/* <a onClick={() => searchForCat('')} >clear search?</a> */}\r\n            <a onClick={() => setCreate(!create)} >new!</a>\r\n\r\n            <a onClick={() => props.selectView('currentView','home')}>close doc</a>\r\n\r\n        </section>\r\n        <span></span>\r\n        <section className='home-container'>\r\n            {create ? <LinkForm setCreate={setCreate} /> : null}\r\n            {mappedLinks}\r\n        </section>\r\n\r\n    </div>)\r\n}\r\nexport default Links","import axios from 'axios'\r\n\r\nconst initialState = {\r\n    user: {},\r\n    isLoggedIn:false,\r\n    isLoading:false,\r\n    isError:false\r\n}\r\n\r\nconst LOGIN_USER = 'LOGIN_USER'\r\nconst LOGOUT_USER = 'LOGOUT_USER'\r\nconst BROWSER_LOGIN = 'BROWSER_LOGIN'\r\n\r\nexport function loginUser(email, password, browser_id) {\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: axios.post('/api/auth/login', {email,password,browser_id}).catch(err => console.log('error',err))\r\n    }\r\n}\r\n\r\nexport function browserLogin(email,browser_id) {\r\n    console.log('hit function',email,browser_id)\r\n    return {\r\n        type:BROWSER_LOGIN,\r\n        payload: axios.post('/api/auth/browser/login', {email,browser_id}).catch(err => console.log('error',err))\r\n    }\r\n}\r\n\r\nexport function logoutUser() {\r\n    return {\r\n        type: LOGOUT_USER,\r\n        payload: axios.get('/api/auth/logout')\r\n    }\r\n}\r\n\r\n// export function registerUser(first_name,last_name,email,password) {\r\n\r\n// }\r\n\r\nexport default function userReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        // ---- MANUAL LOGIN ---- //\r\n        case LOGIN_USER + '_PENDING':\r\n            return {\r\n                ...state,\r\n                isLoading:true\r\n            }\r\n            case LOGIN_USER + '_FULFILLED':\r\n\r\n            return {\r\n                ...state,\r\n                user: action.payload.data, isLoggedIn:true, isLoading:false\r\n            }\r\n        case LOGIN_USER + '_REJECTED':\r\n            \r\n            return {\r\n                ...state,\r\n                isLoading:false,\r\n                isError:true\r\n            }\r\n\r\n        // ---- AUTO LOGIN ---- //\r\n        case BROWSER_LOGIN + '_PENDING':\r\n            return {\r\n                ...state,\r\n                isLoading:true,\r\n            }\r\n        case BROWSER_LOGIN+ '_FULFILLED':\r\n            console.log('hit fulfilled')\r\n            return {\r\n                ...state,\r\n                user: action.payload.data, isLoggedIn:true, isLoading:false\r\n            }\r\n        case BROWSER_LOGIN + '_REJECTED':\r\n            return {\r\n                ...state,\r\n                isLoading:false,\r\n                isError:true\r\n            }\r\n\r\n        // ---- LOGOUT ---- //\r\n        case LOGOUT_USER + '_PENDING':\r\n            return {\r\n                ...state, isLoading: true,\r\n            }\r\n\r\n        case LOGOUT_USER + '_FULFILLED':\r\n            return {\r\n                ...state, isLoggedIn: false,\r\n                user: {},\r\n            }\r\n\r\n        default:\r\n            return state \r\n    }\r\n}","import { useState } from \"react\";\r\nimport './Line.css'\r\n\r\nconst Line = (props) => {\r\n\r\n    const [ state,setState ] = useState({\r\n        speedInFPM:0, // in feet per min\r\n        profileLength:0, // in inches\r\n        rows:0,\r\n        columns:0,\r\n        extrudes:0 // extrudes one or two ?\r\n    })\r\n    const [time,setTime] = useState(0)\r\n    const [ error,setError ] = useState(null)\r\n    \r\n    const execute = () => {\r\n        const { speedInFPM,profileLength,rows,columns,extrudes } = state\r\n\r\n        var totalLength = (rows * columns) * (profileLength / 12) \r\n        var totalMins = ( totalLength / speedInFPM ) / extrudes // -- Total length of all pieces in feet\r\n\r\n        if(extrudes === 1 || extrudes === 2) {\r\n            setTime(getTime(totalMins)) // Total time per order\r\n        } else {setError('How many profiles is extruder running?')}\r\n\r\n        setState((state) => ({...state,extrudes:0}))\r\n    }\r\n\r\n    const getTime = (mins) => {\r\n        const hours = mins / 60\r\n        var remainingMins = (mins % 60)\r\n        var returnTime = Math.floor(hours) + ':' + (remainingMins < 10 ? '0' + Math.floor(remainingMins) : Math.floor(remainingMins))\r\n        return returnTime\r\n      }\r\n\r\n    const input = (prop,event) => {\r\n        event.persist();\r\n        setState((state) => ({\r\n            ...state,\r\n            [prop]: parseFloat(event.target.value),\r\n        }));\r\n    };\r\n\r\n    return(\r\n        <form className=\"line-form\">\r\n            {error != null ?\r\n            <div style={{position:'absolute',backgroundColor:'grey',height:'80px'}} onClick={() => setError(null)}>\r\n                {error}\r\n            </div> : null}\r\n            <strong>Time</strong><strong style={{marginLeft:'60px'}} >{time}</strong>\r\n\r\n            <input placeholder=\"speed in FPM\" onChange={(e) => input('speedInFPM',e)} />\r\n\r\n            <input placeholder=\"Length in Inches\" type=\"numer\" onChange={(e) => input('profileLength',e)} />\r\n\r\n            <input placeholder=\"Rows\" type=\"number\" onChange={(e) => input('rows',e)} />\r\n\r\n            <input placeholder=\"Columns\" type=\"number\" onChange={(e) => input('columns',e)} />\r\n\r\n            <input placeholder=\"Pieces per extruder\" type=\"number\" onChange={(e) => input('extrudes',e)} />\r\n\r\n            <button className=\"btn line-btn\" style={{top:'108px'}} onClick={() => execute()} >\r\n                <strong>Run</strong>\r\n            </button>\r\n\r\n            <button className=\"btn line-btn\" onClick={() => props.selectView('currentView','home')} >\r\n                <strong>exit</strong>\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Line","import './ProtoDisplay.css'\r\n// import Table from \"../../Table/Table\"\r\nimport Line from '../ProductionLine/Line'\r\n\r\nconst ProtoDislplay = (props) => {\r\n\r\n    const table_name = 'titanic_data'\r\n    const endpoint = 'api/passengers/all'\r\n\r\n    return(\r\n        <div className='proto-container' >\r\n            <Line selectView={props.selectView} />\r\n            {/* <Table endpoint={endpoint} table_name={table_name} /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProtoDislplay","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport './Info.css'\r\nimport '../Table/Table.css'\r\nimport CancerDisplay from './CancerStats/CancerDisplay'\r\nimport Employee from './Employee'\r\nimport TitanicDisplay from './Titanic/TitanicDisplay'\r\nimport Documents from './Documents/Documents'\r\nimport Home from './Home/Home'\r\nimport Links from './Links/Links'\r\n// import SpecDocs from './SpecDocs/SpecDocs'\r\nimport { connect } from 'react-redux'\r\nimport { logoutUser, browserLogin } from './../../redux/userReducer'\r\n// import Table from '../Table/Table'\r\nimport ProtoDislplay from './Prototype/ProtoDisplay'\r\n\r\nclass Info extends Component {\r\n    constructor(props){\r\n        super();\r\n\r\n        this.state = {\r\n            // isLoading:false,\r\n\r\n            // employee data //\r\n            employeeDataInput:false,\r\n            employeeSearch:\"\",\r\n            nvpEmployees:[],\r\n\r\n            // - selecting view - //\r\n            currentView:'home',\r\n\r\n            // - selecting menu - //\r\n            currentMenu:'',\r\n            \r\n        }\r\n        this.handleForm = this.handleForm.bind(this)\r\n        this.addEmployeeData = this.addEmployeeData.bind(this)\r\n        this.refreshEmployees = this.refreshEmployees.bind(this)\r\n        this.selectView = this.selectView.bind(this)\r\n    }\r\n\r\n    theWindow(prop,val){\r\n        localStorage.setItem(prop,val)\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { auth } = this.props.user.user \r\n        const browser_id = localStorage['browser_id']\r\n        const savedEmail = localStorage['email']\r\n        if(auth != true){this.props.browserLogin(savedEmail,browser_id)}\r\n\r\n        const uniqueId = () => {\r\n            const s4 = () => Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n            return s4() + s4() + '-' + s4();\r\n          };\r\n        if(browser_id === undefined){this.theWindow('browser_id',uniqueId())}\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const { isLoggedIn } = this.props.user\r\n        if(isLoggedIn === false){this.props.history.push('/')}\r\n    }\r\n\r\n    handleLogout() {\r\n        const uniqueId = () => {\r\n            const s4 = () => Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n            return s4() + s4() + '-' + s4();\r\n          };\r\n        this.theWindow('browser_id',uniqueId())\r\n        this.theWindow('email',undefined)\r\n        this.props.logoutUser()\r\n    }\r\n\r\n    // ---- State Management ---- //\r\n    handleForm(prop,val) {\r\n        this.setState({\r\n            [prop]:val\r\n        })\r\n    }\r\n\r\n    // --- selecting views --- //\r\n    selectView(prop,val) {\r\n        this.handleForm(prop,val)\r\n        this.setState({currentMenu:''})\r\n    }\r\n\r\n    // --- selecting menus --- //\r\n    openMenu(prop,val) {\r\n        if(val === this.state[prop]) { // --- closes menu if already open\r\n            return this.setState({currentMenu:''})\r\n        } else {\r\n            return this.handleForm(prop,val)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    // ---- Employee data functions ---- //\r\n    handleEmployeeSearch = (filter) => {\r\n        this.setState({employeeSearch:filter})\r\n    }\r\n    addEmployeeData() {\r\n        this.setState({employeeDataInput:!this.state.employeeDataInput})\r\n    }\r\n    refreshEmployees = async () => {\r\n        this.resetEmployeeStats().then(\r\n            axios.get('api/employees/all').then(res => {\r\n                this.setState({nvpEmployees:res.data})\r\n            })\r\n        )}\r\n    resetEmployeeStats = async () => {\r\n        this.setState({\r\n            nvpEmployees:[],\r\n            employeeSearch:\"\"\r\n        })\r\n    }\r\n    // ---------------------------------- //\r\n\r\n    render(){\r\n        \r\n        const { currentView,employeeDataInput,isLoading,currentMenu,showMachineLearning,data3View: employeeView,cancerSearch,dataItems,dataItems1,dataView,data1View,data2View: cancerView,cancerDataInput,cancerStats,isMobile,evenTable,nvpEmployees,employeeSearch,cols,showPassengers: passengersView,passengers } = this.state\r\n        const filterEmployee = nvpEmployees.filter(element => element.name.toString().includes(employeeSearch))\r\n        const mappedEmployees = filterEmployee.map(element => {\r\n            return <Employee key={element.index} id={element.index} name={element.name} age={element.age} start_month={element.start_month} start_year={element.start_year} end_month={element.end_month} end_year={element.end_year} employment_duration={element.employment_duration} distance={element.distance} married={element.married} pay={element.pay} attendance={element.attendance} />\r\n        })\r\n        \r\n        return(\r\n            <div className=\"info-container\">\r\n                <header className=\"data-header\">\r\n\r\n                    <section><h3 className=\"info-h4\" onClick={() => this.openMenu('currentMenu','db')} >Database</h3>\r\n                        <form className={`${currentMenu === 'db' ? true : 'hide'}`}>\r\n                            <h4 className={`${currentView === 'home' ? 'selected' : null}`} onClick={() => this.selectView('currentView','home')} >home</h4>\r\n                            <h4 className={` ${currentView === 'cancerView' ? 'selected' : null}`} onClick={() => this.selectView('currentView','cancerView')}>cancer stats</h4>\r\n                            <h4 className={`${currentView === 'passengersView' ? 'selected' : null}`} onClick={() => this.selectView('currentView','passengersView')}>Titanic</h4>\r\n                            <h4 className={`${currentView === 'employeeView' ? 'selected' : null}`} onClick={() => this.selectView('currentView','employeeView')}>employees</h4>\r\n                        </form>\r\n                    </section>\r\n\r\n                    <section><h3 className=\"info-h3\"  onClick={() => this.openMenu('currentMenu','ml')} >machine learning</h3>\r\n                        {/* <div className={`database-dropdown ${!showMachineLearning ? true : 'database-dropdown-hide'}`}>\r\n                            { (<h4 className=\"info-h3\">regression</h4>) : (<h4 className=\"info-h4-selected\" >regression</h4>)}\r\n                            {(<h4 className=\"info-h3\" >classification</h4>) : (<h4 className=\"info-h4-selected\" >classification</h4>)}\r\n                            {(<h4 className=\"info-h3\" >clustering</h4>) : (<h4 className=\"info-h4-selected\" >clustering</h4>)}\r\n                            {(<h4 className=\"info-h3\" >association rule learning</h4>) : (<h4 className=\"info-h4-selected\" >association rule learning</h4>)}\r\n                            {(<h4 className=\"info-h3\" >reinforcement learning</h4>) : (<h4 className=\"info-h4-selected\" >reinforcement learning</h4>)}\r\n                            {(<h4 className=\"info-h3\" >neural networks</h4>) : (<h4 className=\"info-h4-selected\" >deep learning</h4>)}\r\n                            {(<h4 className=\"info-h3\" >natural language processing</h4>) : (<h4 className=\"info-h4-selected\" >natural language processing</h4>)}\r\n                            {(<h4 className=\"info-h3\" >dimensionality reduction</h4>) : (<h4 className=\"info-h4-selected\" >dimensionality reduction</h4>)}\r\n                        </div> */}\r\n\r\n                    <form className={`${currentMenu === 'ml' ? true : 'hide'}`}>\r\n                        <h4>neural networks</h4>\r\n                    </form>\r\n                    </section>\r\n\r\n                    <section><h3 onClick={() => this.selectView('currentView','docsView')} >documents</h3></section>\r\n\r\n                </header>\r\n             \r\n\r\n                    <i style={{marginLeft:'75%'}} onClick={() => this.handleLogout()}>logout</i>\r\n\r\n                    {currentView === 'cancerView' ? <CancerDisplay handleForm={this.handleForm} /> : null}\r\n\r\n                    {currentView === 'passengersView' ? <TitanicDisplay handleForm={this.handleForm} /> : null}\r\n\r\n                    {currentView === 'docsView' ? <Documents handleForm={this.handleForm} theWindow={this.theWindow} /> : null}\r\n\r\n                    {currentView === 'tableView' ? <ProtoDislplay selectView={this.selectView} /> : null}\r\n\r\n                    {currentView === 'home' ? <Home selectView={this.selectView} /> : null}\r\n\r\n                    {currentView === 'webDevTools' ? <Links selectView={this.selectView} /> : null}\r\n\r\n                    {/* {currentView === 'specDocs' ? <SpecDocs /> : null} */}\r\n                    \r\n\r\n                    {/* MOVING THIS CODE TO EXTERNAL */}\r\n                    {/* {employeeView ? \r\n                    <div>\r\n                        <div className=\"search-bar\" ><p className=\"p-search-line\"  onClick={this.addEmployeeData}>add info?</p><p className=\"p-search-line\" onClick={this.refreshEmployees}>refresh</p><input onChange={e => this.handleEmployeeSearch(e.target.value)} type=\"text\" placeholder=\"Search\" className=\"search-input\" /></div>\r\n                        <div className={`cancer-stats-input ${employeeDataInput ? false : 'cancer-stats-input-hide'}`}>\r\n                                <div className=\"input-element\"><input placeholder=\"\" onChange={e => this.handleForm('id',e.target.value)}/></div>\r\n                                <button>submit</button>\r\n                        </div>\r\n                        <div className=\"data-spec\"><a>Name</a><a>Age</a><a>Start Month</a><a>Start Year</a><a>End Month</a><a>End Year</a><a>Employment Duration</a><a>Distance</a><a>Married</a><a>Pay Rate</a><a>Attendance</a></div>\r\n                        <div className=\"stats-container\">\r\n                            {isLoading ? <Loading/> : null}\r\n                                <span className=\"data-spec-list\">{mappedEmployees}</span>\r\n                        </div>\r\n\r\n                    </div> : null} */}\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(reduxState) {\r\n    return reduxState\r\n}\r\n\r\nexport default connect(mapStateToProps, {logoutUser,browserLogin})(Info)","import React, { Component } from 'react'\r\nimport './Auth.css'\r\nimport { loginUser,browserLogin } from '../../redux/userReducer'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Auth extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            email:'',\r\n            password:'',\r\n        }\r\n    }\r\n\r\n    theWindow(prop,val){\r\n        localStorage.setItem(prop,val)\r\n    };\r\n\r\n    componentDidMount(){\r\n        const browser_id = localStorage['browser_id']\r\n        const uniqueId = () => {\r\n            const s4 = () => Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n            return s4() + s4() + '-' + s4();\r\n        }\r\n\r\n        if(browser_id === undefined){this.theWindow('browser_id',uniqueId())}\r\n    };\r\n\r\n    componentDidUpdate(){\r\n        const { auth,email } = this.props.user.user\r\n\r\n        if(auth === true) {\r\n            this.theWindow('email',email)\r\n            this.props.history.push(`/info`)\r\n        }\r\n    };\r\n\r\n    handleChange(prop,val){\r\n        this.setState({\r\n            [prop]: val\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { email,password } = this.state\r\n        const browser_id = localStorage['browser_id'] // -- Added to user table\r\n\r\n        return(\r\n               <div className=\"auth-container\">\r\n                    <h1 style={{color:'black'}} >Data Structures</h1>\r\n                    <div>\r\n                        <p >Email:</p>\r\n                        <input placeholder=\"email\" onChange={e => this.handleChange('email', e.target.value)} style={{width:'100%'}} />\r\n                    </div>\r\n                    <div>\r\n                        <p >Password:</p>\r\n                        <input type='password' onChange={e => this.handleChange('password', e.target.value)} style={{width:'100%'}} />\r\n                    </div>\r\n                    <div >\r\n                        <button onClick={() => this.props.loginUser(email,password,browser_id)}> Login </button>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(reduxState){\r\n    return reduxState\r\n}\r\n\r\nexport default connect(mapStateToProps, {loginUser,browserLogin})(Auth)","\r\n   \r\nimport React from 'react' \r\nimport { Switch, Route } from 'react-router-dom'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport Info from './Components/Information/Info'\r\nimport Auth from './Components/Auth/Auth'\r\n\r\nexport default (\r\n    <Switch>\r\n        <Route exact path=\"/\" component={Auth} />\r\n        <Route path=\"/info\" component={Info} />\r\n    </Switch>\r\n)","export default __webpack_public_path__ + \"static/media/logo.8a76484b.png\";","import './Header.css'\r\nimport image from '../logo.png'\r\n\r\nconst Header = (props) => {\r\n    return(\r\n        <header className=\"header\">\r\n            <img src={image} className=\"logo\" alt=\"CD\"/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import './App.css';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport routes from './routes'\r\nimport Auth from './Components/Auth/Auth'\r\nimport Header from './Components/Header/Header';\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n    <div className=\"App\">\r\n      <Header/>\r\n      {routes}\r\n    </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import axios from \"axios\";\r\n\r\nconst initialState = {\r\n  // characters: []\r\n  characters: {}\r\n};\r\n\r\nconst UPDATE_CHARACTERS = \"UPDATE_CHARACTERS\";\r\n\r\nexport function updateCharacters() {\r\n  return {\r\n    type: UPDATE_CHARACTERS,\r\n    payload: axios.get(\"https://www.breakingbadapi.com/api/characters\")\r\n    // payload: axios.get('/api/projects/all')\r\n  };\r\n}\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case UPDATE_CHARACTERS + \"_FULFILLED\":\r\n      return {\r\n        ...state,\r\n        characters: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","// import { createStore } from 'redux'\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux' \r\nimport reduxPromiseMiddleware from 'redux-promise-middleware'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport userReducer from './userReducer'\r\nimport breakingBadReducer from './breakingBadReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    user: userReducer,\r\n    characters: breakingBadReducer\r\n})\r\n\r\nexport default createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(reduxPromiseMiddleware))\r\n  )\r\n\r\n// export default createStore(userReducer)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' }\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\nimport { BrowserRouter, HashRouter  } from 'react-router-dom'\r\nimport * as serviceWorker from './serviceWorker';\r\nconst Router = process.env.NODE_ENV === 'development' ? HashRouter : BrowserRouter;\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n    <Provider store={store}>\r\n    <App />\r\n    </Provider>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nserviceWorker.register();\r\nreportWebVitals();\r\n"],"sourceRoot":""}